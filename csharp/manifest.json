{
  "source_base_path": "/home/runner/work/Protocols.Lino/Protocols.Lino/csharp",
  "xrefmap": "xrefmap.yml",
  "files": [
    {
      "type": "Resource",
      "output": {
        "resource": {
          "relative_path": "index.json"
        }
      }
    },
    {
      "type": "Conceptual",
      "source_relative_path": "README.md",
      "output": {
        ".html": {
          "relative_path": "README.html"
        }
      },
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "README.ru.md",
      "output": {
        ".html": {
          "relative_path": "README.ru.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "obj/api/Platform.Protocols.Lino.ILinksGroupListExtensions.yml",
      "output": {
        ".html": {
          "relative_path": "api/Platform.Protocols.Lino.ILinksGroupListExtensions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "Platform.Protocols.Lino.ILinksGroupListExtensions",
      "Summary": "<p sourcefile=\"obj/api/Platform.Protocols.Lino.ILinksGroupListExtensions.yml\" sourcestartlinenumber=\"1\">Provides extension methods for collections of <xref href=\"Platform.Protocols.Lino.LinksGroup%601\" data-throw-if-not-resolved=\"false\"></xref> instances.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "obj/api/Platform.Protocols.Lino.IListExtensions.yml",
      "output": {
        ".html": {
          "relative_path": "api/Platform.Protocols.Lino.IListExtensions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "Platform.Protocols.Lino.IListExtensions",
      "Summary": "<p sourcefile=\"obj/api/Platform.Protocols.Lino.IListExtensions.yml\" sourcestartlinenumber=\"1\">Provides extension methods for formatting collections of <xref href=\"Platform.Protocols.Lino.Link%601\" data-throw-if-not-resolved=\"false\"></xref> instances.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "obj/api/Platform.Protocols.Lino.Link-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/Platform.Protocols.Lino.Link-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "Platform.Protocols.Lino.Link<TLinkAddress>",
      "Summary": "<p sourcefile=\"obj/api/Platform.Protocols.Lino.Link-1.yml\" sourcestartlinenumber=\"1\">Represents a link in the Lino protocol with an optional identifier and nested values.\nLinks can represent simple references, complex nested structures, or relationships between references to links.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "obj/api/Platform.Protocols.Lino.LinksGroup-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/Platform.Protocols.Lino.LinksGroup-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "Platform.Protocols.Lino.LinksGroup<TLinkAddress>",
      "Summary": "<p sourcefile=\"obj/api/Platform.Protocols.Lino.LinksGroup-1.yml\" sourcestartlinenumber=\"1\">Represents a group of links with hierarchical structure, where each group contains a primary link and optional nested groups.\nThis structure supports the indentation-based syntax of the Lino protocol.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "obj/api/Platform.Protocols.Lino.Parser.yml",
      "output": {
        ".html": {
          "relative_path": "api/Platform.Protocols.Lino.Parser.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "Platform.Protocols.Lino.Parser",
      "Summary": "<p sourcefile=\"obj/api/Platform.Protocols.Lino.Parser.yml\" sourcestartlinenumber=\"1\">Parses a string according to the rules of the <xref href=\"Platform.Protocols.Lino.Parser\" data-throw-if-not-resolved=\"false\"></xref> grammar.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "obj/api/Platform.Protocols.Lino._-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/Platform.Protocols.Lino._-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "Platform.Protocols.Lino._<TLinkAddress>",
      "Summary": "<p sourcefile=\"obj/api/Platform.Protocols.Lino._-1.yml\" sourcestartlinenumber=\"1\">A utility struct that provides convenient implicit conversions for creating links from various tuple combinations.\nThe underscore name follows functional programming conventions for placeholder/utility types.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "obj/api/Platform.Protocols.Lino.id-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/Platform.Protocols.Lino.id-1.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "Platform.Protocols.Lino.id<TLinkAddress>",
      "Summary": "<p sourcefile=\"obj/api/Platform.Protocols.Lino.id-1.yml\" sourcestartlinenumber=\"1\">A readonly struct that explicitly represents a link identifier/address.\nThis type is used to distinguish between regular values and explicit identifiers in link construction.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "obj/api/Platform.Protocols.Lino.yml",
      "output": {
        ".html": {
          "relative_path": "api/Platform.Protocols.Lino.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "Platform.Protocols.Lino",
      "Summary": null
    },
    {
      "type": "Toc",
      "source_relative_path": "obj/api/toc.yml",
      "output": {
        ".html": {
          "relative_path": "api/toc.html"
        },
        ".json": {
          "relative_path": "api/toc.json"
        }
      },
      "version": ""
    },
    {
      "type": "Toc",
      "source_relative_path": "toc.yml",
      "output": {
        ".html": {
          "relative_path": "toc.html"
        },
        ".json": {
          "relative_path": "toc.json"
        }
      },
      "version": ""
    }
  ],
  "groups": [
    {
      "xrefmap": "xrefmap.yml"
    }
  ]
}