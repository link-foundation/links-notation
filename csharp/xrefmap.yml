### YamlMime:XRefMap
sorted: true
references:
- uid: Platform.Protocols.Lino
  name: Platform.Protocols.Lino
  href: api/Platform.Protocols.Lino.html
  commentId: N:Platform.Protocols.Lino
  fullName: Platform.Protocols.Lino
  nameWithType: Platform.Protocols.Lino
- uid: Platform.Protocols.Lino.ILinksGroupListExtensions
  name: ILinksGroupListExtensions
  href: api/Platform.Protocols.Lino.ILinksGroupListExtensions.html
  commentId: T:Platform.Protocols.Lino.ILinksGroupListExtensions
  fullName: Platform.Protocols.Lino.ILinksGroupListExtensions
  nameWithType: ILinksGroupListExtensions
- uid: Platform.Protocols.Lino.ILinksGroupListExtensions.ToLinksList*
  name: ToLinksList
  href: api/Platform.Protocols.Lino.ILinksGroupListExtensions.html#Platform_Protocols_Lino_ILinksGroupListExtensions_ToLinksList_
  commentId: Overload:Platform.Protocols.Lino.ILinksGroupListExtensions.ToLinksList
  isSpec: "True"
  fullName: Platform.Protocols.Lino.ILinksGroupListExtensions.ToLinksList
  nameWithType: ILinksGroupListExtensions.ToLinksList
- uid: Platform.Protocols.Lino.ILinksGroupListExtensions.ToLinksList``1(System.Collections.Generic.IList{Platform.Protocols.Lino.LinksGroup{``0}})
  name: ToLinksList<TLinkAddress>(IList<LinksGroup<TLinkAddress>>)
  href: api/Platform.Protocols.Lino.ILinksGroupListExtensions.html#Platform_Protocols_Lino_ILinksGroupListExtensions_ToLinksList__1_System_Collections_Generic_IList_Platform_Protocols_Lino_LinksGroup___0___
  commentId: M:Platform.Protocols.Lino.ILinksGroupListExtensions.ToLinksList``1(System.Collections.Generic.IList{Platform.Protocols.Lino.LinksGroup{``0}})
  name.vb: ToLinksList(Of TLinkAddress)(IList(Of LinksGroup(Of TLinkAddress)))
  fullName: Platform.Protocols.Lino.ILinksGroupListExtensions.ToLinksList<TLinkAddress>(System.Collections.Generic.IList<Platform.Protocols.Lino.LinksGroup<TLinkAddress>>)
  fullName.vb: Platform.Protocols.Lino.ILinksGroupListExtensions.ToLinksList(Of TLinkAddress)(System.Collections.Generic.IList(Of Platform.Protocols.Lino.LinksGroup(Of TLinkAddress)))
  nameWithType: ILinksGroupListExtensions.ToLinksList<TLinkAddress>(IList<LinksGroup<TLinkAddress>>)
  nameWithType.vb: ILinksGroupListExtensions.ToLinksList(Of TLinkAddress)(IList(Of LinksGroup(Of TLinkAddress)))
- uid: Platform.Protocols.Lino.IListExtensions
  name: IListExtensions
  href: api/Platform.Protocols.Lino.IListExtensions.html
  commentId: T:Platform.Protocols.Lino.IListExtensions
  fullName: Platform.Protocols.Lino.IListExtensions
  nameWithType: IListExtensions
- uid: Platform.Protocols.Lino.IListExtensions.Format*
  name: Format
  href: api/Platform.Protocols.Lino.IListExtensions.html#Platform_Protocols_Lino_IListExtensions_Format_
  commentId: Overload:Platform.Protocols.Lino.IListExtensions.Format
  isSpec: "True"
  fullName: Platform.Protocols.Lino.IListExtensions.Format
  nameWithType: IListExtensions.Format
- uid: Platform.Protocols.Lino.IListExtensions.Format``1(System.Collections.Generic.IList{Platform.Protocols.Lino.Link{``0}})
  name: Format<TLinkAddress>(IList<Link<TLinkAddress>>)
  href: api/Platform.Protocols.Lino.IListExtensions.html#Platform_Protocols_Lino_IListExtensions_Format__1_System_Collections_Generic_IList_Platform_Protocols_Lino_Link___0___
  commentId: M:Platform.Protocols.Lino.IListExtensions.Format``1(System.Collections.Generic.IList{Platform.Protocols.Lino.Link{``0}})
  name.vb: Format(Of TLinkAddress)(IList(Of Link(Of TLinkAddress)))
  fullName: Platform.Protocols.Lino.IListExtensions.Format<TLinkAddress>(System.Collections.Generic.IList<Platform.Protocols.Lino.Link<TLinkAddress>>)
  fullName.vb: Platform.Protocols.Lino.IListExtensions.Format(Of TLinkAddress)(System.Collections.Generic.IList(Of Platform.Protocols.Lino.Link(Of TLinkAddress)))
  nameWithType: IListExtensions.Format<TLinkAddress>(IList<Link<TLinkAddress>>)
  nameWithType.vb: IListExtensions.Format(Of TLinkAddress)(IList(Of Link(Of TLinkAddress)))
- uid: Platform.Protocols.Lino.IListExtensions.Format``1(System.Collections.Generic.IList{Platform.Protocols.Lino.Link{``0}},System.Boolean)
  name: Format<TLinkAddress>(IList<Link<TLinkAddress>>, bool)
  href: api/Platform.Protocols.Lino.IListExtensions.html#Platform_Protocols_Lino_IListExtensions_Format__1_System_Collections_Generic_IList_Platform_Protocols_Lino_Link___0___System_Boolean_
  commentId: M:Platform.Protocols.Lino.IListExtensions.Format``1(System.Collections.Generic.IList{Platform.Protocols.Lino.Link{``0}},System.Boolean)
  name.vb: Format(Of TLinkAddress)(IList(Of Link(Of TLinkAddress)), Boolean)
  fullName: Platform.Protocols.Lino.IListExtensions.Format<TLinkAddress>(System.Collections.Generic.IList<Platform.Protocols.Lino.Link<TLinkAddress>>, bool)
  fullName.vb: Platform.Protocols.Lino.IListExtensions.Format(Of TLinkAddress)(System.Collections.Generic.IList(Of Platform.Protocols.Lino.Link(Of TLinkAddress)), Boolean)
  nameWithType: IListExtensions.Format<TLinkAddress>(IList<Link<TLinkAddress>>, bool)
  nameWithType.vb: IListExtensions.Format(Of TLinkAddress)(IList(Of Link(Of TLinkAddress)), Boolean)
- uid: Platform.Protocols.Lino.Link`1
  name: Link<TLinkAddress>
  href: api/Platform.Protocols.Lino.Link-1.html
  commentId: T:Platform.Protocols.Lino.Link`1
  name.vb: Link(Of TLinkAddress)
  fullName: Platform.Protocols.Lino.Link<TLinkAddress>
  fullName.vb: Platform.Protocols.Lino.Link(Of TLinkAddress)
  nameWithType: Link<TLinkAddress>
  nameWithType.vb: Link(Of TLinkAddress)
- uid: Platform.Protocols.Lino.Link`1.#ctor(Platform.Protocols.Lino.Link{`0}[])
  name: Link(params Link<TLinkAddress>[])
  href: api/Platform.Protocols.Lino.Link-1.html#Platform_Protocols_Lino_Link_1__ctor_Platform_Protocols_Lino_Link__0____
  commentId: M:Platform.Protocols.Lino.Link`1.#ctor(Platform.Protocols.Lino.Link{`0}[])
  name.vb: New(ParamArray Link(Of TLinkAddress)())
  fullName: Platform.Protocols.Lino.Link<TLinkAddress>.Link(params Platform.Protocols.Lino.Link<TLinkAddress>[])
  fullName.vb: Platform.Protocols.Lino.Link(Of TLinkAddress).New(ParamArray Platform.Protocols.Lino.Link(Of TLinkAddress)())
  nameWithType: Link<TLinkAddress>.Link(params Link<TLinkAddress>[])
  nameWithType.vb: Link(Of TLinkAddress).New(ParamArray Link(Of TLinkAddress)())
- uid: Platform.Protocols.Lino.Link`1.#ctor(System.Collections.Generic.IList{Platform.Protocols.Lino.Link{`0}})
  name: Link(IList<Link<TLinkAddress>>)
  href: api/Platform.Protocols.Lino.Link-1.html#Platform_Protocols_Lino_Link_1__ctor_System_Collections_Generic_IList_Platform_Protocols_Lino_Link__0___
  commentId: M:Platform.Protocols.Lino.Link`1.#ctor(System.Collections.Generic.IList{Platform.Protocols.Lino.Link{`0}})
  name.vb: New(IList(Of Link(Of TLinkAddress)))
  fullName: Platform.Protocols.Lino.Link<TLinkAddress>.Link(System.Collections.Generic.IList<Platform.Protocols.Lino.Link<TLinkAddress>>)
  fullName.vb: Platform.Protocols.Lino.Link(Of TLinkAddress).New(System.Collections.Generic.IList(Of Platform.Protocols.Lino.Link(Of TLinkAddress)))
  nameWithType: Link<TLinkAddress>.Link(IList<Link<TLinkAddress>>)
  nameWithType.vb: Link(Of TLinkAddress).New(IList(Of Link(Of TLinkAddress)))
- uid: Platform.Protocols.Lino.Link`1.#ctor(`0)
  name: Link(TLinkAddress)
  href: api/Platform.Protocols.Lino.Link-1.html#Platform_Protocols_Lino_Link_1__ctor__0_
  commentId: M:Platform.Protocols.Lino.Link`1.#ctor(`0)
  name.vb: New(TLinkAddress)
  fullName: Platform.Protocols.Lino.Link<TLinkAddress>.Link(TLinkAddress)
  fullName.vb: Platform.Protocols.Lino.Link(Of TLinkAddress).New(TLinkAddress)
  nameWithType: Link<TLinkAddress>.Link(TLinkAddress)
  nameWithType.vb: Link(Of TLinkAddress).New(TLinkAddress)
- uid: Platform.Protocols.Lino.Link`1.#ctor(`0,System.Collections.Generic.IList{Platform.Protocols.Lino.Link{`0}})
  name: Link(TLinkAddress?, IList<Link<TLinkAddress>>?)
  href: api/Platform.Protocols.Lino.Link-1.html#Platform_Protocols_Lino_Link_1__ctor__0_System_Collections_Generic_IList_Platform_Protocols_Lino_Link__0___
  commentId: M:Platform.Protocols.Lino.Link`1.#ctor(`0,System.Collections.Generic.IList{Platform.Protocols.Lino.Link{`0}})
  name.vb: New(TLinkAddress, IList(Of Link(Of TLinkAddress)))
  fullName: Platform.Protocols.Lino.Link<TLinkAddress>.Link(TLinkAddress?, System.Collections.Generic.IList<Platform.Protocols.Lino.Link<TLinkAddress>>?)
  fullName.vb: Platform.Protocols.Lino.Link(Of TLinkAddress).New(TLinkAddress, System.Collections.Generic.IList(Of Platform.Protocols.Lino.Link(Of TLinkAddress)))
  nameWithType: Link<TLinkAddress>.Link(TLinkAddress?, IList<Link<TLinkAddress>>?)
  nameWithType.vb: Link(Of TLinkAddress).New(TLinkAddress, IList(Of Link(Of TLinkAddress)))
- uid: Platform.Protocols.Lino.Link`1.#ctor*
  name: Link
  href: api/Platform.Protocols.Lino.Link-1.html#Platform_Protocols_Lino_Link_1__ctor_
  commentId: Overload:Platform.Protocols.Lino.Link`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Platform.Protocols.Lino.Link<TLinkAddress>.Link
  fullName.vb: Platform.Protocols.Lino.Link(Of TLinkAddress).New
  nameWithType: Link<TLinkAddress>.Link
  nameWithType.vb: Link(Of TLinkAddress).New
- uid: Platform.Protocols.Lino.Link`1.Combine(Platform.Protocols.Lino.Link{`0})
  name: Combine(Link<TLinkAddress>)
  href: api/Platform.Protocols.Lino.Link-1.html#Platform_Protocols_Lino_Link_1_Combine_Platform_Protocols_Lino_Link__0__
  commentId: M:Platform.Protocols.Lino.Link`1.Combine(Platform.Protocols.Lino.Link{`0})
  name.vb: Combine(Link(Of TLinkAddress))
  fullName: Platform.Protocols.Lino.Link<TLinkAddress>.Combine(Platform.Protocols.Lino.Link<TLinkAddress>)
  fullName.vb: Platform.Protocols.Lino.Link(Of TLinkAddress).Combine(Platform.Protocols.Lino.Link(Of TLinkAddress))
  nameWithType: Link<TLinkAddress>.Combine(Link<TLinkAddress>)
  nameWithType.vb: Link(Of TLinkAddress).Combine(Link(Of TLinkAddress))
- uid: Platform.Protocols.Lino.Link`1.Combine*
  name: Combine
  href: api/Platform.Protocols.Lino.Link-1.html#Platform_Protocols_Lino_Link_1_Combine_
  commentId: Overload:Platform.Protocols.Lino.Link`1.Combine
  isSpec: "True"
  fullName: Platform.Protocols.Lino.Link<TLinkAddress>.Combine
  fullName.vb: Platform.Protocols.Lino.Link(Of TLinkAddress).Combine
  nameWithType: Link<TLinkAddress>.Combine
  nameWithType.vb: Link(Of TLinkAddress).Combine
- uid: Platform.Protocols.Lino.Link`1.Equals(Platform.Protocols.Lino.Link{`0})
  name: Equals(Link<TLinkAddress>)
  href: api/Platform.Protocols.Lino.Link-1.html#Platform_Protocols_Lino_Link_1_Equals_Platform_Protocols_Lino_Link__0__
  commentId: M:Platform.Protocols.Lino.Link`1.Equals(Platform.Protocols.Lino.Link{`0})
  name.vb: Equals(Link(Of TLinkAddress))
  fullName: Platform.Protocols.Lino.Link<TLinkAddress>.Equals(Platform.Protocols.Lino.Link<TLinkAddress>)
  fullName.vb: Platform.Protocols.Lino.Link(Of TLinkAddress).Equals(Platform.Protocols.Lino.Link(Of TLinkAddress))
  nameWithType: Link<TLinkAddress>.Equals(Link<TLinkAddress>)
  nameWithType.vb: Link(Of TLinkAddress).Equals(Link(Of TLinkAddress))
- uid: Platform.Protocols.Lino.Link`1.Equals(System.Object)
  name: Equals(object?)
  href: api/Platform.Protocols.Lino.Link-1.html#Platform_Protocols_Lino_Link_1_Equals_System_Object_
  commentId: M:Platform.Protocols.Lino.Link`1.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: Platform.Protocols.Lino.Link<TLinkAddress>.Equals(object?)
  fullName.vb: Platform.Protocols.Lino.Link(Of TLinkAddress).Equals(Object)
  nameWithType: Link<TLinkAddress>.Equals(object?)
  nameWithType.vb: Link(Of TLinkAddress).Equals(Object)
- uid: Platform.Protocols.Lino.Link`1.Equals*
  name: Equals
  href: api/Platform.Protocols.Lino.Link-1.html#Platform_Protocols_Lino_Link_1_Equals_
  commentId: Overload:Platform.Protocols.Lino.Link`1.Equals
  isSpec: "True"
  fullName: Platform.Protocols.Lino.Link<TLinkAddress>.Equals
  fullName.vb: Platform.Protocols.Lino.Link(Of TLinkAddress).Equals
  nameWithType: Link<TLinkAddress>.Equals
  nameWithType.vb: Link(Of TLinkAddress).Equals
- uid: Platform.Protocols.Lino.Link`1.EscapeReference(System.String)
  name: EscapeReference(string?)
  href: api/Platform.Protocols.Lino.Link-1.html#Platform_Protocols_Lino_Link_1_EscapeReference_System_String_
  commentId: M:Platform.Protocols.Lino.Link`1.EscapeReference(System.String)
  name.vb: EscapeReference(String)
  fullName: Platform.Protocols.Lino.Link<TLinkAddress>.EscapeReference(string?)
  fullName.vb: Platform.Protocols.Lino.Link(Of TLinkAddress).EscapeReference(String)
  nameWithType: Link<TLinkAddress>.EscapeReference(string?)
  nameWithType.vb: Link(Of TLinkAddress).EscapeReference(String)
- uid: Platform.Protocols.Lino.Link`1.EscapeReference*
  name: EscapeReference
  href: api/Platform.Protocols.Lino.Link-1.html#Platform_Protocols_Lino_Link_1_EscapeReference_
  commentId: Overload:Platform.Protocols.Lino.Link`1.EscapeReference
  isSpec: "True"
  fullName: Platform.Protocols.Lino.Link<TLinkAddress>.EscapeReference
  fullName.vb: Platform.Protocols.Lino.Link(Of TLinkAddress).EscapeReference
  nameWithType: Link<TLinkAddress>.EscapeReference
  nameWithType.vb: Link(Of TLinkAddress).EscapeReference
- uid: Platform.Protocols.Lino.Link`1.GetHashCode
  name: GetHashCode()
  href: api/Platform.Protocols.Lino.Link-1.html#Platform_Protocols_Lino_Link_1_GetHashCode
  commentId: M:Platform.Protocols.Lino.Link`1.GetHashCode
  fullName: Platform.Protocols.Lino.Link<TLinkAddress>.GetHashCode()
  fullName.vb: Platform.Protocols.Lino.Link(Of TLinkAddress).GetHashCode()
  nameWithType: Link<TLinkAddress>.GetHashCode()
  nameWithType.vb: Link(Of TLinkAddress).GetHashCode()
- uid: Platform.Protocols.Lino.Link`1.GetHashCode*
  name: GetHashCode
  href: api/Platform.Protocols.Lino.Link-1.html#Platform_Protocols_Lino_Link_1_GetHashCode_
  commentId: Overload:Platform.Protocols.Lino.Link`1.GetHashCode
  isSpec: "True"
  fullName: Platform.Protocols.Lino.Link<TLinkAddress>.GetHashCode
  fullName.vb: Platform.Protocols.Lino.Link(Of TLinkAddress).GetHashCode
  nameWithType: Link<TLinkAddress>.GetHashCode
  nameWithType.vb: Link(Of TLinkAddress).GetHashCode
- uid: Platform.Protocols.Lino.Link`1.GetValueString(Platform.Protocols.Lino.Link{`0})
  name: GetValueString(Link<TLinkAddress>)
  href: api/Platform.Protocols.Lino.Link-1.html#Platform_Protocols_Lino_Link_1_GetValueString_Platform_Protocols_Lino_Link__0__
  commentId: M:Platform.Protocols.Lino.Link`1.GetValueString(Platform.Protocols.Lino.Link{`0})
  name.vb: GetValueString(Link(Of TLinkAddress))
  fullName: Platform.Protocols.Lino.Link<TLinkAddress>.GetValueString(Platform.Protocols.Lino.Link<TLinkAddress>)
  fullName.vb: Platform.Protocols.Lino.Link(Of TLinkAddress).GetValueString(Platform.Protocols.Lino.Link(Of TLinkAddress))
  nameWithType: Link<TLinkAddress>.GetValueString(Link<TLinkAddress>)
  nameWithType.vb: Link(Of TLinkAddress).GetValueString(Link(Of TLinkAddress))
- uid: Platform.Protocols.Lino.Link`1.GetValueString*
  name: GetValueString
  href: api/Platform.Protocols.Lino.Link-1.html#Platform_Protocols_Lino_Link_1_GetValueString_
  commentId: Overload:Platform.Protocols.Lino.Link`1.GetValueString
  isSpec: "True"
  fullName: Platform.Protocols.Lino.Link<TLinkAddress>.GetValueString
  fullName.vb: Platform.Protocols.Lino.Link(Of TLinkAddress).GetValueString
  nameWithType: Link<TLinkAddress>.GetValueString
  nameWithType.vb: Link(Of TLinkAddress).GetValueString
- uid: Platform.Protocols.Lino.Link`1.GetValuesString
  name: GetValuesString()
  href: api/Platform.Protocols.Lino.Link-1.html#Platform_Protocols_Lino_Link_1_GetValuesString
  commentId: M:Platform.Protocols.Lino.Link`1.GetValuesString
  fullName: Platform.Protocols.Lino.Link<TLinkAddress>.GetValuesString()
  fullName.vb: Platform.Protocols.Lino.Link(Of TLinkAddress).GetValuesString()
  nameWithType: Link<TLinkAddress>.GetValuesString()
  nameWithType.vb: Link(Of TLinkAddress).GetValuesString()
- uid: Platform.Protocols.Lino.Link`1.GetValuesString*
  name: GetValuesString
  href: api/Platform.Protocols.Lino.Link-1.html#Platform_Protocols_Lino_Link_1_GetValuesString_
  commentId: Overload:Platform.Protocols.Lino.Link`1.GetValuesString
  isSpec: "True"
  fullName: Platform.Protocols.Lino.Link<TLinkAddress>.GetValuesString
  fullName.vb: Platform.Protocols.Lino.Link(Of TLinkAddress).GetValuesString
  nameWithType: Link<TLinkAddress>.GetValuesString
  nameWithType.vb: Link(Of TLinkAddress).GetValuesString
- uid: Platform.Protocols.Lino.Link`1.Id
  name: Id
  href: api/Platform.Protocols.Lino.Link-1.html#Platform_Protocols_Lino_Link_1_Id
  commentId: F:Platform.Protocols.Lino.Link`1.Id
  fullName: Platform.Protocols.Lino.Link<TLinkAddress>.Id
  fullName.vb: Platform.Protocols.Lino.Link(Of TLinkAddress).Id
  nameWithType: Link<TLinkAddress>.Id
  nameWithType.vb: Link(Of TLinkAddress).Id
- uid: Platform.Protocols.Lino.Link`1.Simplify
  name: Simplify()
  href: api/Platform.Protocols.Lino.Link-1.html#Platform_Protocols_Lino_Link_1_Simplify
  commentId: M:Platform.Protocols.Lino.Link`1.Simplify
  fullName: Platform.Protocols.Lino.Link<TLinkAddress>.Simplify()
  fullName.vb: Platform.Protocols.Lino.Link(Of TLinkAddress).Simplify()
  nameWithType: Link<TLinkAddress>.Simplify()
  nameWithType.vb: Link(Of TLinkAddress).Simplify()
- uid: Platform.Protocols.Lino.Link`1.Simplify*
  name: Simplify
  href: api/Platform.Protocols.Lino.Link-1.html#Platform_Protocols_Lino_Link_1_Simplify_
  commentId: Overload:Platform.Protocols.Lino.Link`1.Simplify
  isSpec: "True"
  fullName: Platform.Protocols.Lino.Link<TLinkAddress>.Simplify
  fullName.vb: Platform.Protocols.Lino.Link(Of TLinkAddress).Simplify
  nameWithType: Link<TLinkAddress>.Simplify
  nameWithType.vb: Link(Of TLinkAddress).Simplify
- uid: Platform.Protocols.Lino.Link`1.ToLinkOrIdString
  name: ToLinkOrIdString()
  href: api/Platform.Protocols.Lino.Link-1.html#Platform_Protocols_Lino_Link_1_ToLinkOrIdString
  commentId: M:Platform.Protocols.Lino.Link`1.ToLinkOrIdString
  fullName: Platform.Protocols.Lino.Link<TLinkAddress>.ToLinkOrIdString()
  fullName.vb: Platform.Protocols.Lino.Link(Of TLinkAddress).ToLinkOrIdString()
  nameWithType: Link<TLinkAddress>.ToLinkOrIdString()
  nameWithType.vb: Link(Of TLinkAddress).ToLinkOrIdString()
- uid: Platform.Protocols.Lino.Link`1.ToLinkOrIdString*
  name: ToLinkOrIdString
  href: api/Platform.Protocols.Lino.Link-1.html#Platform_Protocols_Lino_Link_1_ToLinkOrIdString_
  commentId: Overload:Platform.Protocols.Lino.Link`1.ToLinkOrIdString
  isSpec: "True"
  fullName: Platform.Protocols.Lino.Link<TLinkAddress>.ToLinkOrIdString
  fullName.vb: Platform.Protocols.Lino.Link(Of TLinkAddress).ToLinkOrIdString
  nameWithType: Link<TLinkAddress>.ToLinkOrIdString
  nameWithType.vb: Link(Of TLinkAddress).ToLinkOrIdString
- uid: Platform.Protocols.Lino.Link`1.ToString
  name: ToString()
  href: api/Platform.Protocols.Lino.Link-1.html#Platform_Protocols_Lino_Link_1_ToString
  commentId: M:Platform.Protocols.Lino.Link`1.ToString
  fullName: Platform.Protocols.Lino.Link<TLinkAddress>.ToString()
  fullName.vb: Platform.Protocols.Lino.Link(Of TLinkAddress).ToString()
  nameWithType: Link<TLinkAddress>.ToString()
  nameWithType.vb: Link(Of TLinkAddress).ToString()
- uid: Platform.Protocols.Lino.Link`1.ToString*
  name: ToString
  href: api/Platform.Protocols.Lino.Link-1.html#Platform_Protocols_Lino_Link_1_ToString_
  commentId: Overload:Platform.Protocols.Lino.Link`1.ToString
  isSpec: "True"
  fullName: Platform.Protocols.Lino.Link<TLinkAddress>.ToString
  fullName.vb: Platform.Protocols.Lino.Link(Of TLinkAddress).ToString
  nameWithType: Link<TLinkAddress>.ToString
  nameWithType.vb: Link(Of TLinkAddress).ToString
- uid: Platform.Protocols.Lino.Link`1.Values
  name: Values
  href: api/Platform.Protocols.Lino.Link-1.html#Platform_Protocols_Lino_Link_1_Values
  commentId: F:Platform.Protocols.Lino.Link`1.Values
  fullName: Platform.Protocols.Lino.Link<TLinkAddress>.Values
  fullName.vb: Platform.Protocols.Lino.Link(Of TLinkAddress).Values
  nameWithType: Link<TLinkAddress>.Values
  nameWithType.vb: Link(Of TLinkAddress).Values
- uid: Platform.Protocols.Lino.Link`1.op_Equality(Platform.Protocols.Lino.Link{`0},Platform.Protocols.Lino.Link{`0})
  name: operator ==(Link<TLinkAddress>, Link<TLinkAddress>)
  href: api/Platform.Protocols.Lino.Link-1.html#Platform_Protocols_Lino_Link_1_op_Equality_Platform_Protocols_Lino_Link__0__Platform_Protocols_Lino_Link__0__
  commentId: M:Platform.Protocols.Lino.Link`1.op_Equality(Platform.Protocols.Lino.Link{`0},Platform.Protocols.Lino.Link{`0})
  name.vb: =(Link(Of TLinkAddress), Link(Of TLinkAddress))
  fullName: Platform.Protocols.Lino.Link<TLinkAddress>.operator ==(Platform.Protocols.Lino.Link<TLinkAddress>, Platform.Protocols.Lino.Link<TLinkAddress>)
  fullName.vb: Platform.Protocols.Lino.Link(Of TLinkAddress).=(Platform.Protocols.Lino.Link(Of TLinkAddress), Platform.Protocols.Lino.Link(Of TLinkAddress))
  nameWithType: Link<TLinkAddress>.operator ==(Link<TLinkAddress>, Link<TLinkAddress>)
  nameWithType.vb: Link(Of TLinkAddress).=(Link(Of TLinkAddress), Link(Of TLinkAddress))
- uid: Platform.Protocols.Lino.Link`1.op_Equality*
  name: operator ==
  href: api/Platform.Protocols.Lino.Link-1.html#Platform_Protocols_Lino_Link_1_op_Equality_
  commentId: Overload:Platform.Protocols.Lino.Link`1.op_Equality
  isSpec: "True"
  name.vb: =
  fullName: Platform.Protocols.Lino.Link<TLinkAddress>.operator ==
  fullName.vb: Platform.Protocols.Lino.Link(Of TLinkAddress).=
  nameWithType: Link<TLinkAddress>.operator ==
  nameWithType.vb: Link(Of TLinkAddress).=
- uid: Platform.Protocols.Lino.Link`1.op_Implicit(System.ValueTuple{Platform.Protocols.Lino.Link{`0},Platform.Protocols.Lino.Link{`0},Platform.Protocols.Lino.Link{`0}})~Platform.Protocols.Lino.Link{`0}
  name: implicit operator Link<TLinkAddress>((Link<TLinkAddress> source, Link<TLinkAddress> linker, Link<TLinkAddress> target))
  href: api/Platform.Protocols.Lino.Link-1.html#Platform_Protocols_Lino_Link_1_op_Implicit_System_ValueTuple_Platform_Protocols_Lino_Link__0__Platform_Protocols_Lino_Link__0__Platform_Protocols_Lino_Link__0____Platform_Protocols_Lino_Link__0_
  commentId: M:Platform.Protocols.Lino.Link`1.op_Implicit(System.ValueTuple{Platform.Protocols.Lino.Link{`0},Platform.Protocols.Lino.Link{`0},Platform.Protocols.Lino.Link{`0}})~Platform.Protocols.Lino.Link{`0}
  name.vb: CType((source As Link(Of TLinkAddress), linker As Link(Of TLinkAddress), target As Link(Of TLinkAddress)))
  fullName: Platform.Protocols.Lino.Link<TLinkAddress>.implicit operator Platform.Protocols.Lino.Link<TLinkAddress>((Platform.Protocols.Lino.Link<TLinkAddress> source, Platform.Protocols.Lino.Link<TLinkAddress> linker, Platform.Protocols.Lino.Link<TLinkAddress> target))
  fullName.vb: Platform.Protocols.Lino.Link(Of TLinkAddress).CType((source As Platform.Protocols.Lino.Link(Of TLinkAddress), linker As Platform.Protocols.Lino.Link(Of TLinkAddress), target As Platform.Protocols.Lino.Link(Of TLinkAddress)))
  nameWithType: Link<TLinkAddress>.implicit operator Link<TLinkAddress>((Link<TLinkAddress> source, Link<TLinkAddress> linker, Link<TLinkAddress> target))
  nameWithType.vb: Link(Of TLinkAddress).CType((source As Link(Of TLinkAddress), linker As Link(Of TLinkAddress), target As Link(Of TLinkAddress)))
- uid: Platform.Protocols.Lino.Link`1.op_Implicit(System.ValueTuple{Platform.Protocols.Lino.Link{`0},Platform.Protocols.Lino.Link{`0}})~Platform.Protocols.Lino.Link{`0}
  name: implicit operator Link<TLinkAddress>((Link<TLinkAddress> source, Link<TLinkAddress> target))
  href: api/Platform.Protocols.Lino.Link-1.html#Platform_Protocols_Lino_Link_1_op_Implicit_System_ValueTuple_Platform_Protocols_Lino_Link__0__Platform_Protocols_Lino_Link__0____Platform_Protocols_Lino_Link__0_
  commentId: M:Platform.Protocols.Lino.Link`1.op_Implicit(System.ValueTuple{Platform.Protocols.Lino.Link{`0},Platform.Protocols.Lino.Link{`0}})~Platform.Protocols.Lino.Link{`0}
  name.vb: CType((source As Link(Of TLinkAddress), target As Link(Of TLinkAddress)))
  fullName: Platform.Protocols.Lino.Link<TLinkAddress>.implicit operator Platform.Protocols.Lino.Link<TLinkAddress>((Platform.Protocols.Lino.Link<TLinkAddress> source, Platform.Protocols.Lino.Link<TLinkAddress> target))
  fullName.vb: Platform.Protocols.Lino.Link(Of TLinkAddress).CType((source As Platform.Protocols.Lino.Link(Of TLinkAddress), target As Platform.Protocols.Lino.Link(Of TLinkAddress)))
  nameWithType: Link<TLinkAddress>.implicit operator Link<TLinkAddress>((Link<TLinkAddress> source, Link<TLinkAddress> target))
  nameWithType.vb: Link(Of TLinkAddress).CType((source As Link(Of TLinkAddress), target As Link(Of TLinkAddress)))
- uid: Platform.Protocols.Lino.Link`1.op_Implicit(System.ValueTuple{Platform.Protocols.Lino.id{`0},Platform.Protocols.Lino.Link{`0},Platform.Protocols.Lino.Link{`0},Platform.Protocols.Lino.Link{`0}})~Platform.Protocols.Lino.Link{`0}
  name: implicit operator Link<TLinkAddress>((id<TLinkAddress> id, Link<TLinkAddress> source, Link<TLinkAddress> linker, Link<TLinkAddress> target))
  href: api/Platform.Protocols.Lino.Link-1.html#Platform_Protocols_Lino_Link_1_op_Implicit_System_ValueTuple_Platform_Protocols_Lino_id__0__Platform_Protocols_Lino_Link__0__Platform_Protocols_Lino_Link__0__Platform_Protocols_Lino_Link__0____Platform_Protocols_Lino_Link__0_
  commentId: M:Platform.Protocols.Lino.Link`1.op_Implicit(System.ValueTuple{Platform.Protocols.Lino.id{`0},Platform.Protocols.Lino.Link{`0},Platform.Protocols.Lino.Link{`0},Platform.Protocols.Lino.Link{`0}})~Platform.Protocols.Lino.Link{`0}
  name.vb: CType((id As id(Of TLinkAddress), source As Link(Of TLinkAddress), linker As Link(Of TLinkAddress), target As Link(Of TLinkAddress)))
  fullName: Platform.Protocols.Lino.Link<TLinkAddress>.implicit operator Platform.Protocols.Lino.Link<TLinkAddress>((Platform.Protocols.Lino.id<TLinkAddress> id, Platform.Protocols.Lino.Link<TLinkAddress> source, Platform.Protocols.Lino.Link<TLinkAddress> linker, Platform.Protocols.Lino.Link<TLinkAddress> target))
  fullName.vb: Platform.Protocols.Lino.Link(Of TLinkAddress).CType((id As Platform.Protocols.Lino.id(Of TLinkAddress), source As Platform.Protocols.Lino.Link(Of TLinkAddress), linker As Platform.Protocols.Lino.Link(Of TLinkAddress), target As Platform.Protocols.Lino.Link(Of TLinkAddress)))
  nameWithType: Link<TLinkAddress>.implicit operator Link<TLinkAddress>((id<TLinkAddress> id, Link<TLinkAddress> source, Link<TLinkAddress> linker, Link<TLinkAddress> target))
  nameWithType.vb: Link(Of TLinkAddress).CType((id As id(Of TLinkAddress), source As Link(Of TLinkAddress), linker As Link(Of TLinkAddress), target As Link(Of TLinkAddress)))
- uid: Platform.Protocols.Lino.Link`1.op_Implicit(System.ValueTuple{Platform.Protocols.Lino.id{`0},Platform.Protocols.Lino.Link{`0},Platform.Protocols.Lino.Link{`0}})~Platform.Protocols.Lino.Link{`0}
  name: implicit operator Link<TLinkAddress>((id<TLinkAddress> id, Link<TLinkAddress> source, Link<TLinkAddress> target))
  href: api/Platform.Protocols.Lino.Link-1.html#Platform_Protocols_Lino_Link_1_op_Implicit_System_ValueTuple_Platform_Protocols_Lino_id__0__Platform_Protocols_Lino_Link__0__Platform_Protocols_Lino_Link__0____Platform_Protocols_Lino_Link__0_
  commentId: M:Platform.Protocols.Lino.Link`1.op_Implicit(System.ValueTuple{Platform.Protocols.Lino.id{`0},Platform.Protocols.Lino.Link{`0},Platform.Protocols.Lino.Link{`0}})~Platform.Protocols.Lino.Link{`0}
  name.vb: CType((id As id(Of TLinkAddress), source As Link(Of TLinkAddress), target As Link(Of TLinkAddress)))
  fullName: Platform.Protocols.Lino.Link<TLinkAddress>.implicit operator Platform.Protocols.Lino.Link<TLinkAddress>((Platform.Protocols.Lino.id<TLinkAddress> id, Platform.Protocols.Lino.Link<TLinkAddress> source, Platform.Protocols.Lino.Link<TLinkAddress> target))
  fullName.vb: Platform.Protocols.Lino.Link(Of TLinkAddress).CType((id As Platform.Protocols.Lino.id(Of TLinkAddress), source As Platform.Protocols.Lino.Link(Of TLinkAddress), target As Platform.Protocols.Lino.Link(Of TLinkAddress)))
  nameWithType: Link<TLinkAddress>.implicit operator Link<TLinkAddress>((id<TLinkAddress> id, Link<TLinkAddress> source, Link<TLinkAddress> target))
  nameWithType.vb: Link(Of TLinkAddress).CType((id As id(Of TLinkAddress), source As Link(Of TLinkAddress), target As Link(Of TLinkAddress)))
- uid: Platform.Protocols.Lino.Link`1.op_Implicit(System.ValueTuple{`0,System.Collections.Generic.IList{Platform.Protocols.Lino.Link{`0}}})~Platform.Protocols.Lino.Link{`0}
  name: implicit operator Link<TLinkAddress>((TLinkAddress, IList<Link<TLinkAddress>>))
  href: api/Platform.Protocols.Lino.Link-1.html#Platform_Protocols_Lino_Link_1_op_Implicit_System_ValueTuple__0_System_Collections_Generic_IList_Platform_Protocols_Lino_Link__0_____Platform_Protocols_Lino_Link__0_
  commentId: M:Platform.Protocols.Lino.Link`1.op_Implicit(System.ValueTuple{`0,System.Collections.Generic.IList{Platform.Protocols.Lino.Link{`0}}})~Platform.Protocols.Lino.Link{`0}
  name.vb: CType((TLinkAddress, IList(Of Link(Of TLinkAddress))))
  fullName: Platform.Protocols.Lino.Link<TLinkAddress>.implicit operator Platform.Protocols.Lino.Link<TLinkAddress>((TLinkAddress, System.Collections.Generic.IList<Platform.Protocols.Lino.Link<TLinkAddress>>))
  fullName.vb: Platform.Protocols.Lino.Link(Of TLinkAddress).CType((TLinkAddress, System.Collections.Generic.IList(Of Platform.Protocols.Lino.Link(Of TLinkAddress))))
  nameWithType: Link<TLinkAddress>.implicit operator Link<TLinkAddress>((TLinkAddress, IList<Link<TLinkAddress>>))
  nameWithType.vb: Link(Of TLinkAddress).CType((TLinkAddress, IList(Of Link(Of TLinkAddress))))
- uid: Platform.Protocols.Lino.Link`1.op_Implicit(`0)~Platform.Protocols.Lino.Link{`0}
  name: implicit operator Link<TLinkAddress>(TLinkAddress)
  href: api/Platform.Protocols.Lino.Link-1.html#Platform_Protocols_Lino_Link_1_op_Implicit__0__Platform_Protocols_Lino_Link__0_
  commentId: M:Platform.Protocols.Lino.Link`1.op_Implicit(`0)~Platform.Protocols.Lino.Link{`0}
  name.vb: CType(TLinkAddress)
  fullName: Platform.Protocols.Lino.Link<TLinkAddress>.implicit operator Platform.Protocols.Lino.Link<TLinkAddress>(TLinkAddress)
  fullName.vb: Platform.Protocols.Lino.Link(Of TLinkAddress).CType(TLinkAddress)
  nameWithType: Link<TLinkAddress>.implicit operator Link<TLinkAddress>(TLinkAddress)
  nameWithType.vb: Link(Of TLinkAddress).CType(TLinkAddress)
- uid: Platform.Protocols.Lino.Link`1.op_Implicit*
  name: implicit operator
  href: api/Platform.Protocols.Lino.Link-1.html#Platform_Protocols_Lino_Link_1_op_Implicit_
  commentId: Overload:Platform.Protocols.Lino.Link`1.op_Implicit
  isSpec: "True"
  name.vb: CType
  fullName: Platform.Protocols.Lino.Link<TLinkAddress>.implicit operator
  fullName.vb: Platform.Protocols.Lino.Link(Of TLinkAddress).CType
  nameWithType: Link<TLinkAddress>.implicit operator
  nameWithType.vb: Link(Of TLinkAddress).CType
- uid: Platform.Protocols.Lino.Link`1.op_Inequality(Platform.Protocols.Lino.Link{`0},Platform.Protocols.Lino.Link{`0})
  name: operator !=(Link<TLinkAddress>, Link<TLinkAddress>)
  href: api/Platform.Protocols.Lino.Link-1.html#Platform_Protocols_Lino_Link_1_op_Inequality_Platform_Protocols_Lino_Link__0__Platform_Protocols_Lino_Link__0__
  commentId: M:Platform.Protocols.Lino.Link`1.op_Inequality(Platform.Protocols.Lino.Link{`0},Platform.Protocols.Lino.Link{`0})
  name.vb: <>(Link(Of TLinkAddress), Link(Of TLinkAddress))
  fullName: Platform.Protocols.Lino.Link<TLinkAddress>.operator !=(Platform.Protocols.Lino.Link<TLinkAddress>, Platform.Protocols.Lino.Link<TLinkAddress>)
  fullName.vb: Platform.Protocols.Lino.Link(Of TLinkAddress).<>(Platform.Protocols.Lino.Link(Of TLinkAddress), Platform.Protocols.Lino.Link(Of TLinkAddress))
  nameWithType: Link<TLinkAddress>.operator !=(Link<TLinkAddress>, Link<TLinkAddress>)
  nameWithType.vb: Link(Of TLinkAddress).<>(Link(Of TLinkAddress), Link(Of TLinkAddress))
- uid: Platform.Protocols.Lino.Link`1.op_Inequality*
  name: operator !=
  href: api/Platform.Protocols.Lino.Link-1.html#Platform_Protocols_Lino_Link_1_op_Inequality_
  commentId: Overload:Platform.Protocols.Lino.Link`1.op_Inequality
  isSpec: "True"
  name.vb: <>
  fullName: Platform.Protocols.Lino.Link<TLinkAddress>.operator !=
  fullName.vb: Platform.Protocols.Lino.Link(Of TLinkAddress).<>
  nameWithType: Link<TLinkAddress>.operator !=
  nameWithType.vb: Link(Of TLinkAddress).<>
- uid: Platform.Protocols.Lino.LinksGroup`1
  name: LinksGroup<TLinkAddress>
  href: api/Platform.Protocols.Lino.LinksGroup-1.html
  commentId: T:Platform.Protocols.Lino.LinksGroup`1
  name.vb: LinksGroup(Of TLinkAddress)
  fullName: Platform.Protocols.Lino.LinksGroup<TLinkAddress>
  fullName.vb: Platform.Protocols.Lino.LinksGroup(Of TLinkAddress)
  nameWithType: LinksGroup<TLinkAddress>
  nameWithType.vb: LinksGroup(Of TLinkAddress)
- uid: Platform.Protocols.Lino.LinksGroup`1.#ctor(Platform.Protocols.Lino.Link{`0})
  name: LinksGroup(Link<TLinkAddress>)
  href: api/Platform.Protocols.Lino.LinksGroup-1.html#Platform_Protocols_Lino_LinksGroup_1__ctor_Platform_Protocols_Lino_Link__0__
  commentId: M:Platform.Protocols.Lino.LinksGroup`1.#ctor(Platform.Protocols.Lino.Link{`0})
  name.vb: New(Link(Of TLinkAddress))
  fullName: Platform.Protocols.Lino.LinksGroup<TLinkAddress>.LinksGroup(Platform.Protocols.Lino.Link<TLinkAddress>)
  fullName.vb: Platform.Protocols.Lino.LinksGroup(Of TLinkAddress).New(Platform.Protocols.Lino.Link(Of TLinkAddress))
  nameWithType: LinksGroup<TLinkAddress>.LinksGroup(Link<TLinkAddress>)
  nameWithType.vb: LinksGroup(Of TLinkAddress).New(Link(Of TLinkAddress))
- uid: Platform.Protocols.Lino.LinksGroup`1.#ctor(Platform.Protocols.Lino.Link{`0},System.Collections.Generic.IList{Platform.Protocols.Lino.LinksGroup{`0}})
  name: LinksGroup(Link<TLinkAddress>, IList<LinksGroup<TLinkAddress>>?)
  href: api/Platform.Protocols.Lino.LinksGroup-1.html#Platform_Protocols_Lino_LinksGroup_1__ctor_Platform_Protocols_Lino_Link__0__System_Collections_Generic_IList_Platform_Protocols_Lino_LinksGroup__0___
  commentId: M:Platform.Protocols.Lino.LinksGroup`1.#ctor(Platform.Protocols.Lino.Link{`0},System.Collections.Generic.IList{Platform.Protocols.Lino.LinksGroup{`0}})
  name.vb: New(Link(Of TLinkAddress), IList(Of LinksGroup(Of TLinkAddress)))
  fullName: Platform.Protocols.Lino.LinksGroup<TLinkAddress>.LinksGroup(Platform.Protocols.Lino.Link<TLinkAddress>, System.Collections.Generic.IList<Platform.Protocols.Lino.LinksGroup<TLinkAddress>>?)
  fullName.vb: Platform.Protocols.Lino.LinksGroup(Of TLinkAddress).New(Platform.Protocols.Lino.Link(Of TLinkAddress), System.Collections.Generic.IList(Of Platform.Protocols.Lino.LinksGroup(Of TLinkAddress)))
  nameWithType: LinksGroup<TLinkAddress>.LinksGroup(Link<TLinkAddress>, IList<LinksGroup<TLinkAddress>>?)
  nameWithType.vb: LinksGroup(Of TLinkAddress).New(Link(Of TLinkAddress), IList(Of LinksGroup(Of TLinkAddress)))
- uid: Platform.Protocols.Lino.LinksGroup`1.#ctor*
  name: LinksGroup
  href: api/Platform.Protocols.Lino.LinksGroup-1.html#Platform_Protocols_Lino_LinksGroup_1__ctor_
  commentId: Overload:Platform.Protocols.Lino.LinksGroup`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Platform.Protocols.Lino.LinksGroup<TLinkAddress>.LinksGroup
  fullName.vb: Platform.Protocols.Lino.LinksGroup(Of TLinkAddress).New
  nameWithType: LinksGroup<TLinkAddress>.LinksGroup
  nameWithType.vb: LinksGroup(Of TLinkAddress).New
- uid: Platform.Protocols.Lino.LinksGroup`1.AppendToLinksList(System.Collections.Generic.List{Platform.Protocols.Lino.Link{`0}})
  name: AppendToLinksList(List<Link<TLinkAddress>>)
  href: api/Platform.Protocols.Lino.LinksGroup-1.html#Platform_Protocols_Lino_LinksGroup_1_AppendToLinksList_System_Collections_Generic_List_Platform_Protocols_Lino_Link__0___
  commentId: M:Platform.Protocols.Lino.LinksGroup`1.AppendToLinksList(System.Collections.Generic.List{Platform.Protocols.Lino.Link{`0}})
  name.vb: AppendToLinksList(List(Of Link(Of TLinkAddress)))
  fullName: Platform.Protocols.Lino.LinksGroup<TLinkAddress>.AppendToLinksList(System.Collections.Generic.List<Platform.Protocols.Lino.Link<TLinkAddress>>)
  fullName.vb: Platform.Protocols.Lino.LinksGroup(Of TLinkAddress).AppendToLinksList(System.Collections.Generic.List(Of Platform.Protocols.Lino.Link(Of TLinkAddress)))
  nameWithType: LinksGroup<TLinkAddress>.AppendToLinksList(List<Link<TLinkAddress>>)
  nameWithType.vb: LinksGroup(Of TLinkAddress).AppendToLinksList(List(Of Link(Of TLinkAddress)))
- uid: Platform.Protocols.Lino.LinksGroup`1.AppendToLinksList(System.Collections.Generic.List{Platform.Protocols.Lino.Link{`0}},Platform.Protocols.Lino.Link{`0},Platform.Protocols.Lino.LinksGroup{`0})
  name: AppendToLinksList(List<Link<TLinkAddress>>, Link<TLinkAddress>, LinksGroup<TLinkAddress>)
  href: api/Platform.Protocols.Lino.LinksGroup-1.html#Platform_Protocols_Lino_LinksGroup_1_AppendToLinksList_System_Collections_Generic_List_Platform_Protocols_Lino_Link__0___Platform_Protocols_Lino_Link__0__Platform_Protocols_Lino_LinksGroup__0__
  commentId: M:Platform.Protocols.Lino.LinksGroup`1.AppendToLinksList(System.Collections.Generic.List{Platform.Protocols.Lino.Link{`0}},Platform.Protocols.Lino.Link{`0},Platform.Protocols.Lino.LinksGroup{`0})
  name.vb: AppendToLinksList(List(Of Link(Of TLinkAddress)), Link(Of TLinkAddress), LinksGroup(Of TLinkAddress))
  fullName: Platform.Protocols.Lino.LinksGroup<TLinkAddress>.AppendToLinksList(System.Collections.Generic.List<Platform.Protocols.Lino.Link<TLinkAddress>>, Platform.Protocols.Lino.Link<TLinkAddress>, Platform.Protocols.Lino.LinksGroup<TLinkAddress>)
  fullName.vb: Platform.Protocols.Lino.LinksGroup(Of TLinkAddress).AppendToLinksList(System.Collections.Generic.List(Of Platform.Protocols.Lino.Link(Of TLinkAddress)), Platform.Protocols.Lino.Link(Of TLinkAddress), Platform.Protocols.Lino.LinksGroup(Of TLinkAddress))
  nameWithType: LinksGroup<TLinkAddress>.AppendToLinksList(List<Link<TLinkAddress>>, Link<TLinkAddress>, LinksGroup<TLinkAddress>)
  nameWithType.vb: LinksGroup(Of TLinkAddress).AppendToLinksList(List(Of Link(Of TLinkAddress)), Link(Of TLinkAddress), LinksGroup(Of TLinkAddress))
- uid: Platform.Protocols.Lino.LinksGroup`1.AppendToLinksList*
  name: AppendToLinksList
  href: api/Platform.Protocols.Lino.LinksGroup-1.html#Platform_Protocols_Lino_LinksGroup_1_AppendToLinksList_
  commentId: Overload:Platform.Protocols.Lino.LinksGroup`1.AppendToLinksList
  isSpec: "True"
  fullName: Platform.Protocols.Lino.LinksGroup<TLinkAddress>.AppendToLinksList
  fullName.vb: Platform.Protocols.Lino.LinksGroup(Of TLinkAddress).AppendToLinksList
  nameWithType: LinksGroup<TLinkAddress>.AppendToLinksList
  nameWithType.vb: LinksGroup(Of TLinkAddress).AppendToLinksList
- uid: Platform.Protocols.Lino.LinksGroup`1.Equals(Platform.Protocols.Lino.LinksGroup{`0})
  name: Equals(LinksGroup<TLinkAddress>)
  href: api/Platform.Protocols.Lino.LinksGroup-1.html#Platform_Protocols_Lino_LinksGroup_1_Equals_Platform_Protocols_Lino_LinksGroup__0__
  commentId: M:Platform.Protocols.Lino.LinksGroup`1.Equals(Platform.Protocols.Lino.LinksGroup{`0})
  name.vb: Equals(LinksGroup(Of TLinkAddress))
  fullName: Platform.Protocols.Lino.LinksGroup<TLinkAddress>.Equals(Platform.Protocols.Lino.LinksGroup<TLinkAddress>)
  fullName.vb: Platform.Protocols.Lino.LinksGroup(Of TLinkAddress).Equals(Platform.Protocols.Lino.LinksGroup(Of TLinkAddress))
  nameWithType: LinksGroup<TLinkAddress>.Equals(LinksGroup<TLinkAddress>)
  nameWithType.vb: LinksGroup(Of TLinkAddress).Equals(LinksGroup(Of TLinkAddress))
- uid: Platform.Protocols.Lino.LinksGroup`1.Equals(System.Object)
  name: Equals(object?)
  href: api/Platform.Protocols.Lino.LinksGroup-1.html#Platform_Protocols_Lino_LinksGroup_1_Equals_System_Object_
  commentId: M:Platform.Protocols.Lino.LinksGroup`1.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: Platform.Protocols.Lino.LinksGroup<TLinkAddress>.Equals(object?)
  fullName.vb: Platform.Protocols.Lino.LinksGroup(Of TLinkAddress).Equals(Object)
  nameWithType: LinksGroup<TLinkAddress>.Equals(object?)
  nameWithType.vb: LinksGroup(Of TLinkAddress).Equals(Object)
- uid: Platform.Protocols.Lino.LinksGroup`1.Equals*
  name: Equals
  href: api/Platform.Protocols.Lino.LinksGroup-1.html#Platform_Protocols_Lino_LinksGroup_1_Equals_
  commentId: Overload:Platform.Protocols.Lino.LinksGroup`1.Equals
  isSpec: "True"
  fullName: Platform.Protocols.Lino.LinksGroup<TLinkAddress>.Equals
  fullName.vb: Platform.Protocols.Lino.LinksGroup(Of TLinkAddress).Equals
  nameWithType: LinksGroup<TLinkAddress>.Equals
  nameWithType.vb: LinksGroup(Of TLinkAddress).Equals
- uid: Platform.Protocols.Lino.LinksGroup`1.GetHashCode
  name: GetHashCode()
  href: api/Platform.Protocols.Lino.LinksGroup-1.html#Platform_Protocols_Lino_LinksGroup_1_GetHashCode
  commentId: M:Platform.Protocols.Lino.LinksGroup`1.GetHashCode
  fullName: Platform.Protocols.Lino.LinksGroup<TLinkAddress>.GetHashCode()
  fullName.vb: Platform.Protocols.Lino.LinksGroup(Of TLinkAddress).GetHashCode()
  nameWithType: LinksGroup<TLinkAddress>.GetHashCode()
  nameWithType.vb: LinksGroup(Of TLinkAddress).GetHashCode()
- uid: Platform.Protocols.Lino.LinksGroup`1.GetHashCode*
  name: GetHashCode
  href: api/Platform.Protocols.Lino.LinksGroup-1.html#Platform_Protocols_Lino_LinksGroup_1_GetHashCode_
  commentId: Overload:Platform.Protocols.Lino.LinksGroup`1.GetHashCode
  isSpec: "True"
  fullName: Platform.Protocols.Lino.LinksGroup<TLinkAddress>.GetHashCode
  fullName.vb: Platform.Protocols.Lino.LinksGroup(Of TLinkAddress).GetHashCode
  nameWithType: LinksGroup<TLinkAddress>.GetHashCode
  nameWithType.vb: LinksGroup(Of TLinkAddress).GetHashCode
- uid: Platform.Protocols.Lino.LinksGroup`1.Groups
  name: Groups
  href: api/Platform.Protocols.Lino.LinksGroup-1.html#Platform_Protocols_Lino_LinksGroup_1_Groups
  commentId: P:Platform.Protocols.Lino.LinksGroup`1.Groups
  fullName: Platform.Protocols.Lino.LinksGroup<TLinkAddress>.Groups
  fullName.vb: Platform.Protocols.Lino.LinksGroup(Of TLinkAddress).Groups
  nameWithType: LinksGroup<TLinkAddress>.Groups
  nameWithType.vb: LinksGroup(Of TLinkAddress).Groups
- uid: Platform.Protocols.Lino.LinksGroup`1.Groups*
  name: Groups
  href: api/Platform.Protocols.Lino.LinksGroup-1.html#Platform_Protocols_Lino_LinksGroup_1_Groups_
  commentId: Overload:Platform.Protocols.Lino.LinksGroup`1.Groups
  isSpec: "True"
  fullName: Platform.Protocols.Lino.LinksGroup<TLinkAddress>.Groups
  fullName.vb: Platform.Protocols.Lino.LinksGroup(Of TLinkAddress).Groups
  nameWithType: LinksGroup<TLinkAddress>.Groups
  nameWithType.vb: LinksGroup(Of TLinkAddress).Groups
- uid: Platform.Protocols.Lino.LinksGroup`1.Link
  name: Link
  href: api/Platform.Protocols.Lino.LinksGroup-1.html#Platform_Protocols_Lino_LinksGroup_1_Link
  commentId: P:Platform.Protocols.Lino.LinksGroup`1.Link
  fullName: Platform.Protocols.Lino.LinksGroup<TLinkAddress>.Link
  fullName.vb: Platform.Protocols.Lino.LinksGroup(Of TLinkAddress).Link
  nameWithType: LinksGroup<TLinkAddress>.Link
  nameWithType.vb: LinksGroup(Of TLinkAddress).Link
- uid: Platform.Protocols.Lino.LinksGroup`1.Link*
  name: Link
  href: api/Platform.Protocols.Lino.LinksGroup-1.html#Platform_Protocols_Lino_LinksGroup_1_Link_
  commentId: Overload:Platform.Protocols.Lino.LinksGroup`1.Link
  isSpec: "True"
  fullName: Platform.Protocols.Lino.LinksGroup<TLinkAddress>.Link
  fullName.vb: Platform.Protocols.Lino.LinksGroup(Of TLinkAddress).Link
  nameWithType: LinksGroup<TLinkAddress>.Link
  nameWithType.vb: LinksGroup(Of TLinkAddress).Link
- uid: Platform.Protocols.Lino.LinksGroup`1.ToLinksList
  name: ToLinksList()
  href: api/Platform.Protocols.Lino.LinksGroup-1.html#Platform_Protocols_Lino_LinksGroup_1_ToLinksList
  commentId: M:Platform.Protocols.Lino.LinksGroup`1.ToLinksList
  fullName: Platform.Protocols.Lino.LinksGroup<TLinkAddress>.ToLinksList()
  fullName.vb: Platform.Protocols.Lino.LinksGroup(Of TLinkAddress).ToLinksList()
  nameWithType: LinksGroup<TLinkAddress>.ToLinksList()
  nameWithType.vb: LinksGroup(Of TLinkAddress).ToLinksList()
- uid: Platform.Protocols.Lino.LinksGroup`1.ToLinksList*
  name: ToLinksList
  href: api/Platform.Protocols.Lino.LinksGroup-1.html#Platform_Protocols_Lino_LinksGroup_1_ToLinksList_
  commentId: Overload:Platform.Protocols.Lino.LinksGroup`1.ToLinksList
  isSpec: "True"
  fullName: Platform.Protocols.Lino.LinksGroup<TLinkAddress>.ToLinksList
  fullName.vb: Platform.Protocols.Lino.LinksGroup(Of TLinkAddress).ToLinksList
  nameWithType: LinksGroup<TLinkAddress>.ToLinksList
  nameWithType.vb: LinksGroup(Of TLinkAddress).ToLinksList
- uid: Platform.Protocols.Lino.LinksGroup`1.op_Equality(Platform.Protocols.Lino.LinksGroup{`0},Platform.Protocols.Lino.LinksGroup{`0})
  name: operator ==(LinksGroup<TLinkAddress>, LinksGroup<TLinkAddress>)
  href: api/Platform.Protocols.Lino.LinksGroup-1.html#Platform_Protocols_Lino_LinksGroup_1_op_Equality_Platform_Protocols_Lino_LinksGroup__0__Platform_Protocols_Lino_LinksGroup__0__
  commentId: M:Platform.Protocols.Lino.LinksGroup`1.op_Equality(Platform.Protocols.Lino.LinksGroup{`0},Platform.Protocols.Lino.LinksGroup{`0})
  name.vb: =(LinksGroup(Of TLinkAddress), LinksGroup(Of TLinkAddress))
  fullName: Platform.Protocols.Lino.LinksGroup<TLinkAddress>.operator ==(Platform.Protocols.Lino.LinksGroup<TLinkAddress>, Platform.Protocols.Lino.LinksGroup<TLinkAddress>)
  fullName.vb: Platform.Protocols.Lino.LinksGroup(Of TLinkAddress).=(Platform.Protocols.Lino.LinksGroup(Of TLinkAddress), Platform.Protocols.Lino.LinksGroup(Of TLinkAddress))
  nameWithType: LinksGroup<TLinkAddress>.operator ==(LinksGroup<TLinkAddress>, LinksGroup<TLinkAddress>)
  nameWithType.vb: LinksGroup(Of TLinkAddress).=(LinksGroup(Of TLinkAddress), LinksGroup(Of TLinkAddress))
- uid: Platform.Protocols.Lino.LinksGroup`1.op_Equality*
  name: operator ==
  href: api/Platform.Protocols.Lino.LinksGroup-1.html#Platform_Protocols_Lino_LinksGroup_1_op_Equality_
  commentId: Overload:Platform.Protocols.Lino.LinksGroup`1.op_Equality
  isSpec: "True"
  name.vb: =
  fullName: Platform.Protocols.Lino.LinksGroup<TLinkAddress>.operator ==
  fullName.vb: Platform.Protocols.Lino.LinksGroup(Of TLinkAddress).=
  nameWithType: LinksGroup<TLinkAddress>.operator ==
  nameWithType.vb: LinksGroup(Of TLinkAddress).=
- uid: Platform.Protocols.Lino.LinksGroup`1.op_Implicit(Platform.Protocols.Lino.LinksGroup{`0})~System.Collections.Generic.List{Platform.Protocols.Lino.Link{`0}}
  name: implicit operator List<Link<TLinkAddress>>(LinksGroup<TLinkAddress>)
  href: api/Platform.Protocols.Lino.LinksGroup-1.html#Platform_Protocols_Lino_LinksGroup_1_op_Implicit_Platform_Protocols_Lino_LinksGroup__0___System_Collections_Generic_List_Platform_Protocols_Lino_Link__0__
  commentId: M:Platform.Protocols.Lino.LinksGroup`1.op_Implicit(Platform.Protocols.Lino.LinksGroup{`0})~System.Collections.Generic.List{Platform.Protocols.Lino.Link{`0}}
  name.vb: CType(LinksGroup(Of TLinkAddress))
  fullName: Platform.Protocols.Lino.LinksGroup<TLinkAddress>.implicit operator System.Collections.Generic.List<Platform.Protocols.Lino.Link<TLinkAddress>>(Platform.Protocols.Lino.LinksGroup<TLinkAddress>)
  fullName.vb: Platform.Protocols.Lino.LinksGroup(Of TLinkAddress).CType(Platform.Protocols.Lino.LinksGroup(Of TLinkAddress))
  nameWithType: LinksGroup<TLinkAddress>.implicit operator List<Link<TLinkAddress>>(LinksGroup<TLinkAddress>)
  nameWithType.vb: LinksGroup(Of TLinkAddress).CType(LinksGroup(Of TLinkAddress))
- uid: Platform.Protocols.Lino.LinksGroup`1.op_Implicit*
  name: implicit operator
  href: api/Platform.Protocols.Lino.LinksGroup-1.html#Platform_Protocols_Lino_LinksGroup_1_op_Implicit_
  commentId: Overload:Platform.Protocols.Lino.LinksGroup`1.op_Implicit
  isSpec: "True"
  name.vb: CType
  fullName: Platform.Protocols.Lino.LinksGroup<TLinkAddress>.implicit operator
  fullName.vb: Platform.Protocols.Lino.LinksGroup(Of TLinkAddress).CType
  nameWithType: LinksGroup<TLinkAddress>.implicit operator
  nameWithType.vb: LinksGroup(Of TLinkAddress).CType
- uid: Platform.Protocols.Lino.LinksGroup`1.op_Inequality(Platform.Protocols.Lino.LinksGroup{`0},Platform.Protocols.Lino.LinksGroup{`0})
  name: operator !=(LinksGroup<TLinkAddress>, LinksGroup<TLinkAddress>)
  href: api/Platform.Protocols.Lino.LinksGroup-1.html#Platform_Protocols_Lino_LinksGroup_1_op_Inequality_Platform_Protocols_Lino_LinksGroup__0__Platform_Protocols_Lino_LinksGroup__0__
  commentId: M:Platform.Protocols.Lino.LinksGroup`1.op_Inequality(Platform.Protocols.Lino.LinksGroup{`0},Platform.Protocols.Lino.LinksGroup{`0})
  name.vb: <>(LinksGroup(Of TLinkAddress), LinksGroup(Of TLinkAddress))
  fullName: Platform.Protocols.Lino.LinksGroup<TLinkAddress>.operator !=(Platform.Protocols.Lino.LinksGroup<TLinkAddress>, Platform.Protocols.Lino.LinksGroup<TLinkAddress>)
  fullName.vb: Platform.Protocols.Lino.LinksGroup(Of TLinkAddress).<>(Platform.Protocols.Lino.LinksGroup(Of TLinkAddress), Platform.Protocols.Lino.LinksGroup(Of TLinkAddress))
  nameWithType: LinksGroup<TLinkAddress>.operator !=(LinksGroup<TLinkAddress>, LinksGroup<TLinkAddress>)
  nameWithType.vb: LinksGroup(Of TLinkAddress).<>(LinksGroup(Of TLinkAddress), LinksGroup(Of TLinkAddress))
- uid: Platform.Protocols.Lino.LinksGroup`1.op_Inequality*
  name: operator !=
  href: api/Platform.Protocols.Lino.LinksGroup-1.html#Platform_Protocols_Lino_LinksGroup_1_op_Inequality_
  commentId: Overload:Platform.Protocols.Lino.LinksGroup`1.op_Inequality
  isSpec: "True"
  name.vb: <>
  fullName: Platform.Protocols.Lino.LinksGroup<TLinkAddress>.operator !=
  fullName.vb: Platform.Protocols.Lino.LinksGroup(Of TLinkAddress).<>
  nameWithType: LinksGroup<TLinkAddress>.operator !=
  nameWithType.vb: LinksGroup(Of TLinkAddress).<>
- uid: Platform.Protocols.Lino.Parser
  name: Parser
  href: api/Platform.Protocols.Lino.Parser.html
  commentId: T:Platform.Protocols.Lino.Parser
  fullName: Platform.Protocols.Lino.Parser
  nameWithType: Parser
- uid: Platform.Protocols.Lino.Parser.Parse(System.String,System.String)
  name: Parse(string, string)
  href: api/Platform.Protocols.Lino.Parser.html#Platform_Protocols_Lino_Parser_Parse_System_String_System_String_
  commentId: M:Platform.Protocols.Lino.Parser.Parse(System.String,System.String)
  name.vb: Parse(String, String)
  fullName: Platform.Protocols.Lino.Parser.Parse(string, string)
  fullName.vb: Platform.Protocols.Lino.Parser.Parse(String, String)
  nameWithType: Parser.Parse(string, string)
  nameWithType.vb: Parser.Parse(String, String)
- uid: Platform.Protocols.Lino.Parser.Parse*
  name: Parse
  href: api/Platform.Protocols.Lino.Parser.html#Platform_Protocols_Lino_Parser_Parse_
  commentId: Overload:Platform.Protocols.Lino.Parser.Parse
  isSpec: "True"
  fullName: Platform.Protocols.Lino.Parser.Parse
  nameWithType: Parser.Parse
- uid: Platform.Protocols.Lino._`1
  name: _<TLinkAddress>
  href: api/Platform.Protocols.Lino._-1.html
  commentId: T:Platform.Protocols.Lino._`1
  name.vb: _(Of TLinkAddress)
  fullName: Platform.Protocols.Lino._<TLinkAddress>
  fullName.vb: Platform.Protocols.Lino._(Of TLinkAddress)
  nameWithType: _<TLinkAddress>
  nameWithType.vb: _(Of TLinkAddress)
- uid: Platform.Protocols.Lino._`1.#ctor(Platform.Protocols.Lino.Link{`0})
  name: _(Link<TLinkAddress>)
  href: api/Platform.Protocols.Lino._-1.html#Platform_Protocols_Lino___1__ctor_Platform_Protocols_Lino_Link__0__
  commentId: M:Platform.Protocols.Lino._`1.#ctor(Platform.Protocols.Lino.Link{`0})
  name.vb: New(Link(Of TLinkAddress))
  fullName: Platform.Protocols.Lino._<TLinkAddress>._(Platform.Protocols.Lino.Link<TLinkAddress>)
  fullName.vb: Platform.Protocols.Lino._(Of TLinkAddress).New(Platform.Protocols.Lino.Link(Of TLinkAddress))
  nameWithType: _<TLinkAddress>._(Link<TLinkAddress>)
  nameWithType.vb: _(Of TLinkAddress).New(Link(Of TLinkAddress))
- uid: Platform.Protocols.Lino._`1.#ctor*
  name: _
  href: api/Platform.Protocols.Lino._-1.html#Platform_Protocols_Lino___1__ctor_
  commentId: Overload:Platform.Protocols.Lino._`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Platform.Protocols.Lino._<TLinkAddress>._
  fullName.vb: Platform.Protocols.Lino._(Of TLinkAddress).New
  nameWithType: _<TLinkAddress>._
  nameWithType.vb: _(Of TLinkAddress).New
- uid: Platform.Protocols.Lino._`1.Link
  name: Link
  href: api/Platform.Protocols.Lino._-1.html#Platform_Protocols_Lino___1_Link
  commentId: F:Platform.Protocols.Lino._`1.Link
  fullName: Platform.Protocols.Lino._<TLinkAddress>.Link
  fullName.vb: Platform.Protocols.Lino._(Of TLinkAddress).Link
  nameWithType: _<TLinkAddress>.Link
  nameWithType.vb: _(Of TLinkAddress).Link
- uid: Platform.Protocols.Lino._`1.op_Implicit(Platform.Protocols.Lino.Link{`0})~Platform.Protocols.Lino._{`0}
  name: implicit operator _<TLinkAddress>(Link<TLinkAddress>)
  href: api/Platform.Protocols.Lino._-1.html#Platform_Protocols_Lino___1_op_Implicit_Platform_Protocols_Lino_Link__0___Platform_Protocols_Lino____0_
  commentId: M:Platform.Protocols.Lino._`1.op_Implicit(Platform.Protocols.Lino.Link{`0})~Platform.Protocols.Lino._{`0}
  name.vb: CType(Link(Of TLinkAddress))
  fullName: Platform.Protocols.Lino._<TLinkAddress>.implicit operator Platform.Protocols.Lino._<TLinkAddress>(Platform.Protocols.Lino.Link<TLinkAddress>)
  fullName.vb: Platform.Protocols.Lino._(Of TLinkAddress).CType(Platform.Protocols.Lino.Link(Of TLinkAddress))
  nameWithType: _<TLinkAddress>.implicit operator _<TLinkAddress>(Link<TLinkAddress>)
  nameWithType.vb: _(Of TLinkAddress).CType(Link(Of TLinkAddress))
- uid: Platform.Protocols.Lino._`1.op_Implicit(Platform.Protocols.Lino._{`0})~Platform.Protocols.Lino.Link{`0}
  name: implicit operator Link<TLinkAddress>(_<TLinkAddress>)
  href: api/Platform.Protocols.Lino._-1.html#Platform_Protocols_Lino___1_op_Implicit_Platform_Protocols_Lino____0___Platform_Protocols_Lino_Link__0_
  commentId: M:Platform.Protocols.Lino._`1.op_Implicit(Platform.Protocols.Lino._{`0})~Platform.Protocols.Lino.Link{`0}
  name.vb: CType(_(Of TLinkAddress))
  fullName: Platform.Protocols.Lino._<TLinkAddress>.implicit operator Platform.Protocols.Lino.Link<TLinkAddress>(Platform.Protocols.Lino._<TLinkAddress>)
  fullName.vb: Platform.Protocols.Lino._(Of TLinkAddress).CType(Platform.Protocols.Lino._(Of TLinkAddress))
  nameWithType: _<TLinkAddress>.implicit operator Link<TLinkAddress>(_<TLinkAddress>)
  nameWithType.vb: _(Of TLinkAddress).CType(_(Of TLinkAddress))
- uid: Platform.Protocols.Lino._`1.op_Implicit(System.ValueTuple{`0,Platform.Protocols.Lino.Link{`0},Platform.Protocols.Lino.Link{`0},Platform.Protocols.Lino.Link{`0}})~Platform.Protocols.Lino._{`0}
  name: implicit operator _<TLinkAddress>((TLinkAddress, Link<TLinkAddress>, Link<TLinkAddress>, Link<TLinkAddress>))
  href: api/Platform.Protocols.Lino._-1.html#Platform_Protocols_Lino___1_op_Implicit_System_ValueTuple__0_Platform_Protocols_Lino_Link__0__Platform_Protocols_Lino_Link__0__Platform_Protocols_Lino_Link__0____Platform_Protocols_Lino____0_
  commentId: M:Platform.Protocols.Lino._`1.op_Implicit(System.ValueTuple{`0,Platform.Protocols.Lino.Link{`0},Platform.Protocols.Lino.Link{`0},Platform.Protocols.Lino.Link{`0}})~Platform.Protocols.Lino._{`0}
  name.vb: CType((TLinkAddress, Link(Of TLinkAddress), Link(Of TLinkAddress), Link(Of TLinkAddress)))
  fullName: Platform.Protocols.Lino._<TLinkAddress>.implicit operator Platform.Protocols.Lino._<TLinkAddress>((TLinkAddress, Platform.Protocols.Lino.Link<TLinkAddress>, Platform.Protocols.Lino.Link<TLinkAddress>, Platform.Protocols.Lino.Link<TLinkAddress>))
  fullName.vb: Platform.Protocols.Lino._(Of TLinkAddress).CType((TLinkAddress, Platform.Protocols.Lino.Link(Of TLinkAddress), Platform.Protocols.Lino.Link(Of TLinkAddress), Platform.Protocols.Lino.Link(Of TLinkAddress)))
  nameWithType: _<TLinkAddress>.implicit operator _<TLinkAddress>((TLinkAddress, Link<TLinkAddress>, Link<TLinkAddress>, Link<TLinkAddress>))
  nameWithType.vb: _(Of TLinkAddress).CType((TLinkAddress, Link(Of TLinkAddress), Link(Of TLinkAddress), Link(Of TLinkAddress)))
- uid: Platform.Protocols.Lino._`1.op_Implicit(System.ValueTuple{`0,Platform.Protocols.Lino.Link{`0},Platform.Protocols.Lino.Link{`0}})~Platform.Protocols.Lino._{`0}
  name: implicit operator _<TLinkAddress>((TLinkAddress, Link<TLinkAddress>, Link<TLinkAddress>))
  href: api/Platform.Protocols.Lino._-1.html#Platform_Protocols_Lino___1_op_Implicit_System_ValueTuple__0_Platform_Protocols_Lino_Link__0__Platform_Protocols_Lino_Link__0____Platform_Protocols_Lino____0_
  commentId: M:Platform.Protocols.Lino._`1.op_Implicit(System.ValueTuple{`0,Platform.Protocols.Lino.Link{`0},Platform.Protocols.Lino.Link{`0}})~Platform.Protocols.Lino._{`0}
  name.vb: CType((TLinkAddress, Link(Of TLinkAddress), Link(Of TLinkAddress)))
  fullName: Platform.Protocols.Lino._<TLinkAddress>.implicit operator Platform.Protocols.Lino._<TLinkAddress>((TLinkAddress, Platform.Protocols.Lino.Link<TLinkAddress>, Platform.Protocols.Lino.Link<TLinkAddress>))
  fullName.vb: Platform.Protocols.Lino._(Of TLinkAddress).CType((TLinkAddress, Platform.Protocols.Lino.Link(Of TLinkAddress), Platform.Protocols.Lino.Link(Of TLinkAddress)))
  nameWithType: _<TLinkAddress>.implicit operator _<TLinkAddress>((TLinkAddress, Link<TLinkAddress>, Link<TLinkAddress>))
  nameWithType.vb: _(Of TLinkAddress).CType((TLinkAddress, Link(Of TLinkAddress), Link(Of TLinkAddress)))
- uid: Platform.Protocols.Lino._`1.op_Implicit(System.ValueTuple{`0,Platform.Protocols.Lino.Link{`0}})~Platform.Protocols.Lino._{`0}
  name: implicit operator _<TLinkAddress>((TLinkAddress, Link<TLinkAddress>))
  href: api/Platform.Protocols.Lino._-1.html#Platform_Protocols_Lino___1_op_Implicit_System_ValueTuple__0_Platform_Protocols_Lino_Link__0____Platform_Protocols_Lino____0_
  commentId: M:Platform.Protocols.Lino._`1.op_Implicit(System.ValueTuple{`0,Platform.Protocols.Lino.Link{`0}})~Platform.Protocols.Lino._{`0}
  name.vb: CType((TLinkAddress, Link(Of TLinkAddress)))
  fullName: Platform.Protocols.Lino._<TLinkAddress>.implicit operator Platform.Protocols.Lino._<TLinkAddress>((TLinkAddress, Platform.Protocols.Lino.Link<TLinkAddress>))
  fullName.vb: Platform.Protocols.Lino._(Of TLinkAddress).CType((TLinkAddress, Platform.Protocols.Lino.Link(Of TLinkAddress)))
  nameWithType: _<TLinkAddress>.implicit operator _<TLinkAddress>((TLinkAddress, Link<TLinkAddress>))
  nameWithType.vb: _(Of TLinkAddress).CType((TLinkAddress, Link(Of TLinkAddress)))
- uid: Platform.Protocols.Lino._`1.op_Implicit(`0)~Platform.Protocols.Lino._{`0}
  name: implicit operator _<TLinkAddress>(TLinkAddress)
  href: api/Platform.Protocols.Lino._-1.html#Platform_Protocols_Lino___1_op_Implicit__0__Platform_Protocols_Lino____0_
  commentId: M:Platform.Protocols.Lino._`1.op_Implicit(`0)~Platform.Protocols.Lino._{`0}
  name.vb: CType(TLinkAddress)
  fullName: Platform.Protocols.Lino._<TLinkAddress>.implicit operator Platform.Protocols.Lino._<TLinkAddress>(TLinkAddress)
  fullName.vb: Platform.Protocols.Lino._(Of TLinkAddress).CType(TLinkAddress)
  nameWithType: _<TLinkAddress>.implicit operator _<TLinkAddress>(TLinkAddress)
  nameWithType.vb: _(Of TLinkAddress).CType(TLinkAddress)
- uid: Platform.Protocols.Lino._`1.op_Implicit*
  name: implicit operator
  href: api/Platform.Protocols.Lino._-1.html#Platform_Protocols_Lino___1_op_Implicit_
  commentId: Overload:Platform.Protocols.Lino._`1.op_Implicit
  isSpec: "True"
  name.vb: CType
  fullName: Platform.Protocols.Lino._<TLinkAddress>.implicit operator
  fullName.vb: Platform.Protocols.Lino._(Of TLinkAddress).CType
  nameWithType: _<TLinkAddress>.implicit operator
  nameWithType.vb: _(Of TLinkAddress).CType
- uid: Platform.Protocols.Lino.id`1
  name: id<TLinkAddress>
  href: api/Platform.Protocols.Lino.id-1.html
  commentId: T:Platform.Protocols.Lino.id`1
  name.vb: id(Of TLinkAddress)
  fullName: Platform.Protocols.Lino.id<TLinkAddress>
  fullName.vb: Platform.Protocols.Lino.id(Of TLinkAddress)
  nameWithType: id<TLinkAddress>
  nameWithType.vb: id(Of TLinkAddress)
- uid: Platform.Protocols.Lino.id`1.#ctor(`0)
  name: id(TLinkAddress)
  href: api/Platform.Protocols.Lino.id-1.html#Platform_Protocols_Lino_id_1__ctor__0_
  commentId: M:Platform.Protocols.Lino.id`1.#ctor(`0)
  name.vb: New(TLinkAddress)
  fullName: Platform.Protocols.Lino.id<TLinkAddress>.id(TLinkAddress)
  fullName.vb: Platform.Protocols.Lino.id(Of TLinkAddress).New(TLinkAddress)
  nameWithType: id<TLinkAddress>.id(TLinkAddress)
  nameWithType.vb: id(Of TLinkAddress).New(TLinkAddress)
- uid: Platform.Protocols.Lino.id`1.#ctor*
  name: id
  href: api/Platform.Protocols.Lino.id-1.html#Platform_Protocols_Lino_id_1__ctor_
  commentId: Overload:Platform.Protocols.Lino.id`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Platform.Protocols.Lino.id<TLinkAddress>.id
  fullName.vb: Platform.Protocols.Lino.id(Of TLinkAddress).New
  nameWithType: id<TLinkAddress>.id
  nameWithType.vb: id(Of TLinkAddress).New
- uid: Platform.Protocols.Lino.id`1.Id
  name: Id
  href: api/Platform.Protocols.Lino.id-1.html#Platform_Protocols_Lino_id_1_Id
  commentId: F:Platform.Protocols.Lino.id`1.Id
  fullName: Platform.Protocols.Lino.id<TLinkAddress>.Id
  fullName.vb: Platform.Protocols.Lino.id(Of TLinkAddress).Id
  nameWithType: id<TLinkAddress>.Id
  nameWithType.vb: id(Of TLinkAddress).Id
- uid: Platform.Protocols.Lino.id`1.op_Explicit(`0)~Platform.Protocols.Lino.id{`0}
  name: explicit operator id<TLinkAddress>(TLinkAddress)
  href: api/Platform.Protocols.Lino.id-1.html#Platform_Protocols_Lino_id_1_op_Explicit__0__Platform_Protocols_Lino_id__0_
  commentId: M:Platform.Protocols.Lino.id`1.op_Explicit(`0)~Platform.Protocols.Lino.id{`0}
  name.vb: CType(TLinkAddress)
  fullName: Platform.Protocols.Lino.id<TLinkAddress>.explicit operator Platform.Protocols.Lino.id<TLinkAddress>(TLinkAddress)
  fullName.vb: Platform.Protocols.Lino.id(Of TLinkAddress).CType(TLinkAddress)
  nameWithType: id<TLinkAddress>.explicit operator id<TLinkAddress>(TLinkAddress)
  nameWithType.vb: id(Of TLinkAddress).CType(TLinkAddress)
- uid: Platform.Protocols.Lino.id`1.op_Explicit*
  name: explicit operator
  href: api/Platform.Protocols.Lino.id-1.html#Platform_Protocols_Lino_id_1_op_Explicit_
  commentId: Overload:Platform.Protocols.Lino.id`1.op_Explicit
  isSpec: "True"
  name.vb: CType
  fullName: Platform.Protocols.Lino.id<TLinkAddress>.explicit operator
  fullName.vb: Platform.Protocols.Lino.id(Of TLinkAddress).CType
  nameWithType: id<TLinkAddress>.explicit operator
  nameWithType.vb: id(Of TLinkAddress).CType
