{
  "README.html": {
    "href": "README.html",
    "title": "Lino Protocol Parser for C# | LinksPlatform's Platform.Protocols.Lino Library",
    "summary": "Lino Protocol Parser for C# C# implementation of the Lino protocol parser using Pegasus parser generator and Platform.Collections. Installation Package Manager Install-Package Platform.Protocols.Lino .NET CLI dotnet add package Platform.Protocols.Lino PackageReference <PackageReference Include=\"Platform.Protocols.Lino\" Version=\"0.4.5\" /> Build from Source Clone the repository and build: git clone https://github.com/linksplatform/Protocols.Lino.git cd Protocols.Lino/csharp dotnet build Platform.Protocols.Lino.sln Test Run tests: dotnet test Usage Basic Parsing using Platform.Protocols.Lino; // Create parser var parser = new Parser(); // Parse Lino format string string input = @\"papa (lovesMama: loves mama) son lovesMama daughter lovesMama all (love mama)\"; var links = parser.Parse(input); // Access parsed links foreach (var link in links) { Console.WriteLine(link.ToString()); } Converting Back to String using Platform.Protocols.Lino; // Format links back to string string formatted = links.Format(); Console.WriteLine(formatted); Working with Links // Create link programmatically var link = new Link<string>(\"id\", new[] { \"value1\", \"value2\" }); // Access link properties Console.WriteLine($\"ID: {link.Id}\"); foreach (var value in link.Values) { Console.WriteLine($\"Value: {value}\"); } Advanced Usage with Generic Types // Using numeric link addresses var parser = new Parser<ulong>(); var numericLinks = parser.Parse(\"(1: 2 3)\"); // Working with custom address types var customParser = new Parser<Guid>(); Syntax Examples Doublets (2-tuple) papa (lovesMama: loves mama) son lovesMama daughter lovesMama all (love mama) Triplets (3-tuple) papa has car mama has house (papa and mama) are happy N-tuples with References (linksNotation: links notation) (This is a linksNotation as well) (linksNotation supports (unlimited number (of references) in each link)) API Reference Classes Parser<TLinkAddress>: Main parser class for converting strings to links Link<TLinkAddress>: Represents a single link with ID and values LinksGroup<TLinkAddress>: Container for grouping related links Extension Methods IListExtensions.Format(): Converts list of links back to string format ILinksGroupListExtensions: Additional operations for link groups Dependencies .NET 8.0 Microsoft.CSharp (4.7.0) Pegasus (4.1.0) Platform.Collections (0.3.2) Documentation For complete API documentation, visit: Platform.Protocols.Lino Documentation"
  },
  "README.ru.html": {
    "href": "README.ru.html",
    "title": "Парсер протокола Lino для C# | LinksPlatform's Platform.Protocols.Lino Library",
    "summary": "Парсер протокола Lino для C# Реализация парсера протокола Lino для C# с использованием генератора парсеров Pegasus и Platform.Collections. Установка Менеджер пакетов Install-Package Platform.Protocols.Lino .NET CLI dotnet add package Platform.Protocols.Lino PackageReference <PackageReference Include=\"Platform.Protocols.Lino\" Version=\"0.4.5\" /> Сборка из исходного кода Клонируйте репозиторий и соберите проект: git clone https://github.com/linksplatform/Protocols.Lino.git cd Protocols.Lino/csharp dotnet build Platform.Protocols.Lino.sln Тестирование Запуск тестов: dotnet test Использование Базовый парсинг using Platform.Protocols.Lino; // Создаем парсер var parser = new Parser(); // Парсим строку в формате Lino string input = @\"папа (любитМаму: любит маму) сын любитМаму дочь любитМаму все (любят маму)\"; var links = parser.Parse(input); // Обращение к распарсенным связям foreach (var link in links) { Console.WriteLine(link.ToString()); } Преобразование обратно в строку using Platform.Protocols.Lino; // Форматирование связей обратно в строку string formatted = links.Format(); Console.WriteLine(formatted); Работа со связями // Создание связи программно var link = new Link<string>(\"идентификатор\", new[] { \"значение1\", \"значение2\" }); // Доступ к свойствам связи Console.WriteLine($\"ID: {link.Id}\"); foreach (var value in link.Values) { Console.WriteLine($\"Значение: {value}\"); } Расширенное использование с универсальными типами // Использование числовых адресов связей var parser = new Parser<ulong>(); var numericLinks = parser.Parse(\"(1: 2 3)\"); // Работа с пользовательскими типами адресов var customParser = new Parser<Guid>(); Примеры синтаксиса Дублеты (2-кортежи) папа (любитМаму: любит маму) сын любитМаму дочь любитМаму все (любят маму) Триплеты (3-кортежи) папа имеет машину мама имеет дом (папа и мама) счастливы N-кортежи со ссылками (нотацияСвязей: нотация связей) (Это тоже нотацияСвязей) (нотацияСвязей поддерживает (неограниченное количество (ссылок) в каждой связи)) Справочник API Классы Parser<TLinkAddress>: Основной класс парсера для преобразования строк в связи Link<TLinkAddress>: Представляет одну связь с ID и значениями LinksGroup<TLinkAddress>: Контейнер для группировки связанных связей Методы расширения IListExtensions.Format(): Преобразует список связей обратно в строковый формат ILinksGroupListExtensions: Дополнительные операции для групп связей Зависимости .NET 8.0 Microsoft.CSharp (4.7.0) Pegasus (4.1.0) Platform.Collections (0.3.2) Документация Полная документация API: Platform.Protocols.Lino Documentation"
  },
  "api/Platform.Protocols.Lino.ILinksGroupListExtensions.html": {
    "href": "api/Platform.Protocols.Lino.ILinksGroupListExtensions.html",
    "title": "Class ILinksGroupListExtensions | LinksPlatform's Platform.Protocols.Lino Library",
    "summary": "Class ILinksGroupListExtensions Inheritance object ILinksGroupListExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Platform.Protocols.Lino Assembly: Platform.Protocols.Lino.dll Syntax public static class ILinksGroupListExtensions Methods | Edit this page View Source ToLinksList<TLinkAddress>(IList<LinksGroup<TLinkAddress>>) Declaration public static List<Link<TLinkAddress>> ToLinksList<TLinkAddress>(this IList<LinksGroup<TLinkAddress>> groups) Parameters Type Name Description IList<LinksGroup<TLinkAddress>> groups Returns Type Description List<Link<TLinkAddress>> Type Parameters Name Description TLinkAddress"
  },
  "api/Platform.Protocols.Lino.IListExtensions.html": {
    "href": "api/Platform.Protocols.Lino.IListExtensions.html",
    "title": "Class IListExtensions | LinksPlatform's Platform.Protocols.Lino Library",
    "summary": "Class IListExtensions Inheritance object IListExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Platform.Protocols.Lino Assembly: Platform.Protocols.Lino.dll Syntax public static class IListExtensions Methods | Edit this page View Source Format<TLinkAddress>(IList<Link<TLinkAddress>>) Declaration public static string Format<TLinkAddress>(this IList<Link<TLinkAddress>> links) Parameters Type Name Description IList<Link<TLinkAddress>> links Returns Type Description string Type Parameters Name Description TLinkAddress | Edit this page View Source Format<TLinkAddress>(IList<Link<TLinkAddress>>, bool) Declaration public static string Format<TLinkAddress>(this IList<Link<TLinkAddress>> links, bool lessParentheses) Parameters Type Name Description IList<Link<TLinkAddress>> links bool lessParentheses Returns Type Description string Type Parameters Name Description TLinkAddress"
  },
  "api/Platform.Protocols.Lino.Link-1.html": {
    "href": "api/Platform.Protocols.Lino.Link-1.html",
    "title": "Struct Link<TLinkAddress> | LinksPlatform's Platform.Protocols.Lino Library",
    "summary": "Struct Link<TLinkAddress> Implements IEquatable<Link<TLinkAddress>> Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Platform.Protocols.Lino Assembly: Platform.Protocols.Lino.dll Syntax public struct Link<TLinkAddress> : IEquatable<Link<TLinkAddress>> Type Parameters Name Description TLinkAddress Constructors | Edit this page View Source Link(params Link<TLinkAddress>[]) Declaration public Link(params Link<TLinkAddress>[] values) Parameters Type Name Description Link<TLinkAddress>[] values | Edit this page View Source Link(IList<Link<TLinkAddress>>) Declaration public Link(IList<Link<TLinkAddress>> values) Parameters Type Name Description IList<Link<TLinkAddress>> values | Edit this page View Source Link(TLinkAddress) Declaration public Link(TLinkAddress id) Parameters Type Name Description TLinkAddress id | Edit this page View Source Link(TLinkAddress?, IList<Link<TLinkAddress>>?) Declaration public Link(TLinkAddress? id, IList<Link<TLinkAddress>>? values) Parameters Type Name Description TLinkAddress id IList<Link<TLinkAddress>> values Fields | Edit this page View Source Id Declaration public readonly TLinkAddress? Id Field Value Type Description TLinkAddress | Edit this page View Source Values Declaration public readonly IList<Link<TLinkAddress>>? Values Field Value Type Description IList<Link<TLinkAddress>> Methods | Edit this page View Source Combine(Link<TLinkAddress>) Declaration public Link<TLinkAddress> Combine(Link<TLinkAddress> other) Parameters Type Name Description Link<TLinkAddress> other Returns Type Description Link<TLinkAddress> | Edit this page View Source Equals(Link<TLinkAddress>) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(Link<TLinkAddress> other) Parameters Type Name Description Link<TLinkAddress> other An object to compare with this object. Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. | Edit this page View Source Equals(object?) Indicates whether this instance and a specified object are equal. Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj The object to compare with the current instance. Returns Type Description bool true if obj and this instance are the same type and represent the same value; otherwise, false. Overrides ValueType.Equals(object) | Edit this page View Source EscapeReference(string?) Declaration public static string EscapeReference(string? reference) Parameters Type Name Description string reference Returns Type Description string | Edit this page View Source GetHashCode() Returns the hash code for this instance. Declaration public override int GetHashCode() Returns Type Description int A 32-bit signed integer that is the hash code for this instance. Overrides ValueType.GetHashCode() | Edit this page View Source GetValueString(Link<TLinkAddress>) Declaration public static string GetValueString(Link<TLinkAddress> value) Parameters Type Name Description Link<TLinkAddress> value Returns Type Description string | Edit this page View Source GetValuesString() Declaration public string GetValuesString() Returns Type Description string | Edit this page View Source Simplify() Declaration public Link<TLinkAddress> Simplify() Returns Type Description Link<TLinkAddress> | Edit this page View Source ToLinkOrIdString() Declaration public string ToLinkOrIdString() Returns Type Description string | Edit this page View Source ToString() Returns the fully qualified type name of this instance. Declaration public override string ToString() Returns Type Description string The fully qualified type name. Overrides ValueType.ToString() Operators | Edit this page View Source operator ==(Link<TLinkAddress>, Link<TLinkAddress>) Declaration public static bool operator ==(Link<TLinkAddress> left, Link<TLinkAddress> right) Parameters Type Name Description Link<TLinkAddress> left Link<TLinkAddress> right Returns Type Description bool | Edit this page View Source implicit operator Link<TLinkAddress>((Link<TLinkAddress> source, Link<TLinkAddress> linker, Link<TLinkAddress> target)) Declaration public static implicit operator Link<TLinkAddress>((Link<TLinkAddress> source, Link<TLinkAddress> linker, Link<TLinkAddress> target) value) Parameters Type Name Description (Link<TLinkAddress> source, Link<TLinkAddress> linker, Link<TLinkAddress> target) value Returns Type Description Link<TLinkAddress> | Edit this page View Source implicit operator Link<TLinkAddress>((Link<TLinkAddress> source, Link<TLinkAddress> target)) Declaration public static implicit operator Link<TLinkAddress>((Link<TLinkAddress> source, Link<TLinkAddress> target) value) Parameters Type Name Description (Link<TLinkAddress> source, Link<TLinkAddress> target) value Returns Type Description Link<TLinkAddress> | Edit this page View Source implicit operator Link<TLinkAddress>((id<TLinkAddress> id, Link<TLinkAddress> source, Link<TLinkAddress> linker, Link<TLinkAddress> target)) Declaration public static implicit operator Link<TLinkAddress>((id<TLinkAddress> id, Link<TLinkAddress> source, Link<TLinkAddress> linker, Link<TLinkAddress> target) value) Parameters Type Name Description (id<TLinkAddress> id, Link<TLinkAddress> source, Link<TLinkAddress> linker, Link<TLinkAddress> target) value Returns Type Description Link<TLinkAddress> | Edit this page View Source implicit operator Link<TLinkAddress>((id<TLinkAddress> id, Link<TLinkAddress> source, Link<TLinkAddress> target)) Declaration public static implicit operator Link<TLinkAddress>((id<TLinkAddress> id, Link<TLinkAddress> source, Link<TLinkAddress> target) value) Parameters Type Name Description (id<TLinkAddress> id, Link<TLinkAddress> source, Link<TLinkAddress> target) value Returns Type Description Link<TLinkAddress> | Edit this page View Source implicit operator Link<TLinkAddress>((TLinkAddress, IList<Link<TLinkAddress>>)) Declaration public static implicit operator Link<TLinkAddress>((TLinkAddress, IList<Link<TLinkAddress>>) value) Parameters Type Name Description (TLinkAddress, IList<Link<TLinkAddress>>) value Returns Type Description Link<TLinkAddress> | Edit this page View Source implicit operator Link<TLinkAddress>(TLinkAddress) Declaration public static implicit operator Link<TLinkAddress>(TLinkAddress value) Parameters Type Name Description TLinkAddress value Returns Type Description Link<TLinkAddress> | Edit this page View Source operator !=(Link<TLinkAddress>, Link<TLinkAddress>) Declaration public static bool operator !=(Link<TLinkAddress> left, Link<TLinkAddress> right) Parameters Type Name Description Link<TLinkAddress> left Link<TLinkAddress> right Returns Type Description bool Implements IEquatable<T>"
  },
  "api/Platform.Protocols.Lino.LinksGroup-1.html": {
    "href": "api/Platform.Protocols.Lino.LinksGroup-1.html",
    "title": "Struct LinksGroup<TLinkAddress> | LinksPlatform's Platform.Protocols.Lino Library",
    "summary": "Struct LinksGroup<TLinkAddress> Implements IEquatable<LinksGroup<TLinkAddress>> Inherited Members ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Platform.Protocols.Lino Assembly: Platform.Protocols.Lino.dll Syntax public struct LinksGroup<TLinkAddress> : IEquatable<LinksGroup<TLinkAddress>> Type Parameters Name Description TLinkAddress Constructors | Edit this page View Source LinksGroup(Link<TLinkAddress>) Declaration public LinksGroup(Link<TLinkAddress> link) Parameters Type Name Description Link<TLinkAddress> link | Edit this page View Source LinksGroup(Link<TLinkAddress>, IList<LinksGroup<TLinkAddress>>?) Declaration public LinksGroup(Link<TLinkAddress> link, IList<LinksGroup<TLinkAddress>>? groups) Parameters Type Name Description Link<TLinkAddress> link IList<LinksGroup<TLinkAddress>> groups Properties | Edit this page View Source Groups Declaration public IList<LinksGroup<TLinkAddress>>? Groups { readonly get; set; } Property Value Type Description IList<LinksGroup<TLinkAddress>> | Edit this page View Source Link Declaration public Link<TLinkAddress> Link { readonly get; set; } Property Value Type Description Link<TLinkAddress> Methods | Edit this page View Source AppendToLinksList(List<Link<TLinkAddress>>) Declaration public void AppendToLinksList(List<Link<TLinkAddress>> list) Parameters Type Name Description List<Link<TLinkAddress>> list | Edit this page View Source AppendToLinksList(List<Link<TLinkAddress>>, Link<TLinkAddress>, LinksGroup<TLinkAddress>) Declaration public static void AppendToLinksList(List<Link<TLinkAddress>> list, Link<TLinkAddress> dependency, LinksGroup<TLinkAddress> group) Parameters Type Name Description List<Link<TLinkAddress>> list Link<TLinkAddress> dependency LinksGroup<TLinkAddress> group | Edit this page View Source Equals(LinksGroup<TLinkAddress>) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(LinksGroup<TLinkAddress> other) Parameters Type Name Description LinksGroup<TLinkAddress> other An object to compare with this object. Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. | Edit this page View Source Equals(object?) Indicates whether this instance and a specified object are equal. Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj The object to compare with the current instance. Returns Type Description bool true if obj and this instance are the same type and represent the same value; otherwise, false. Overrides ValueType.Equals(object) | Edit this page View Source GetHashCode() Returns the hash code for this instance. Declaration public override int GetHashCode() Returns Type Description int A 32-bit signed integer that is the hash code for this instance. Overrides ValueType.GetHashCode() | Edit this page View Source ToLinksList() Declaration public List<Link<TLinkAddress>> ToLinksList() Returns Type Description List<Link<TLinkAddress>> Operators | Edit this page View Source operator ==(LinksGroup<TLinkAddress>, LinksGroup<TLinkAddress>) Declaration public static bool operator ==(LinksGroup<TLinkAddress> left, LinksGroup<TLinkAddress> right) Parameters Type Name Description LinksGroup<TLinkAddress> left LinksGroup<TLinkAddress> right Returns Type Description bool | Edit this page View Source implicit operator List<Link<TLinkAddress>>(LinksGroup<TLinkAddress>) Declaration public static implicit operator List<Link<TLinkAddress>>(LinksGroup<TLinkAddress> value) Parameters Type Name Description LinksGroup<TLinkAddress> value Returns Type Description List<Link<TLinkAddress>> | Edit this page View Source operator !=(LinksGroup<TLinkAddress>, LinksGroup<TLinkAddress>) Declaration public static bool operator !=(LinksGroup<TLinkAddress> left, LinksGroup<TLinkAddress> right) Parameters Type Name Description LinksGroup<TLinkAddress> left LinksGroup<TLinkAddress> right Returns Type Description bool Implements IEquatable<T>"
  },
  "api/Platform.Protocols.Lino.Parser.html": {
    "href": "api/Platform.Protocols.Lino.Parser.html",
    "title": "Class Parser | LinksPlatform's Platform.Protocols.Lino Library",
    "summary": "Class Parser Parses a string according to the rules of the Parser grammar. Inheritance object Parser Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Platform.Protocols.Lino Assembly: Platform.Protocols.Lino.dll Syntax public class Parser Methods | Edit this page View Source Parse(string, string) Parses a string according to the rules of the Parser grammar. Declaration public IList<Link<string>> Parse(string subject, string fileName = null) Parameters Type Name Description string subject The parsing subject. string fileName The optional file name to use in error messages. Returns Type Description IList<Link<string>> The IList<Link<string>> parsed from subject. Exceptions Type Condition FormatException Thrown when parsing fails against subject. The exception's Data[\"cursor\"] will be set with the cursor where the fatal error occurred."
  },
  "api/Platform.Protocols.Lino._-1.html": {
    "href": "api/Platform.Protocols.Lino._-1.html",
    "title": "Struct _<TLinkAddress> | LinksPlatform's Platform.Protocols.Lino Library",
    "summary": "Struct _<TLinkAddress> Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Platform.Protocols.Lino Assembly: Platform.Protocols.Lino.dll Syntax public struct _<TLinkAddress> Type Parameters Name Description TLinkAddress Constructors | Edit this page View Source _(Link<TLinkAddress>) Declaration public _(Link<TLinkAddress> id) Parameters Type Name Description Link<TLinkAddress> id Fields | Edit this page View Source Link Declaration public readonly Link<TLinkAddress> Link Field Value Type Description Link<TLinkAddress> Operators | Edit this page View Source implicit operator _<TLinkAddress>(Link<TLinkAddress>) Declaration public static implicit operator _<TLinkAddress>(Link<TLinkAddress> value) Parameters Type Name Description Link<TLinkAddress> value Returns Type Description _<TLinkAddress> | Edit this page View Source implicit operator Link<TLinkAddress>(_<TLinkAddress>) Declaration public static implicit operator Link<TLinkAddress>(_<TLinkAddress> value) Parameters Type Name Description _<TLinkAddress> value Returns Type Description Link<TLinkAddress> | Edit this page View Source implicit operator _<TLinkAddress>((TLinkAddress, Link<TLinkAddress>, Link<TLinkAddress>, Link<TLinkAddress>)) Declaration public static implicit operator _<TLinkAddress>((TLinkAddress, Link<TLinkAddress>, Link<TLinkAddress>, Link<TLinkAddress>) value) Parameters Type Name Description (TLinkAddress, Link<TLinkAddress>, Link<TLinkAddress>, Link<TLinkAddress>) value Returns Type Description _<TLinkAddress> | Edit this page View Source implicit operator _<TLinkAddress>((TLinkAddress, Link<TLinkAddress>, Link<TLinkAddress>)) Declaration public static implicit operator _<TLinkAddress>((TLinkAddress, Link<TLinkAddress>, Link<TLinkAddress>) value) Parameters Type Name Description (TLinkAddress, Link<TLinkAddress>, Link<TLinkAddress>) value Returns Type Description _<TLinkAddress> | Edit this page View Source implicit operator _<TLinkAddress>((TLinkAddress, Link<TLinkAddress>)) Declaration public static implicit operator _<TLinkAddress>((TLinkAddress, Link<TLinkAddress>) value) Parameters Type Name Description (TLinkAddress, Link<TLinkAddress>) value Returns Type Description _<TLinkAddress> | Edit this page View Source implicit operator _<TLinkAddress>(TLinkAddress) Declaration public static implicit operator _<TLinkAddress>(TLinkAddress id) Parameters Type Name Description TLinkAddress id Returns Type Description _<TLinkAddress>"
  },
  "api/Platform.Protocols.Lino.html": {
    "href": "api/Platform.Protocols.Lino.html",
    "title": "Namespace Platform.Protocols.Lino | LinksPlatform's Platform.Protocols.Lino Library",
    "summary": "Namespace Platform.Protocols.Lino Classes ILinksGroupListExtensions IListExtensions Parser Parses a string according to the rules of the Parser grammar. Structs Link<TLinkAddress> LinksGroup<TLinkAddress> _<TLinkAddress> id<TLinkAddress>"
  },
  "api/Platform.Protocols.Lino.id-1.html": {
    "href": "api/Platform.Protocols.Lino.id-1.html",
    "title": "Struct id<TLinkAddress> | LinksPlatform's Platform.Protocols.Lino Library",
    "summary": "Struct id<TLinkAddress> Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Platform.Protocols.Lino Assembly: Platform.Protocols.Lino.dll Syntax public readonly struct id<TLinkAddress> Type Parameters Name Description TLinkAddress Constructors | Edit this page View Source id(TLinkAddress) Declaration public id(TLinkAddress id) Parameters Type Name Description TLinkAddress id Fields | Edit this page View Source Id Declaration public readonly TLinkAddress Id Field Value Type Description TLinkAddress Operators | Edit this page View Source explicit operator id<TLinkAddress>(TLinkAddress) Declaration public static explicit operator id<TLinkAddress>(TLinkAddress id) Parameters Type Name Description TLinkAddress id Returns Type Description id<TLinkAddress>"
  }
}